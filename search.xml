<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Ê∏ÖÈ¶ôÊú®ÂÖªÊÆñÔºà‰∫åÔºâ]]></title>
    <url>%2F2019%2F05%2F08%2F%E6%B8%85%E9%A6%99%E6%9C%A8%E5%85%BB%E6%AE%96%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
    <content type="text"><![CDATA[ÂøÉÂøÉÂàáÂàá,ÊØèÂ§©ÈÉΩ‰ºöÂÖ≥Ê≥®ÂÆÉÁöÑÂèòÂåñ,ÂèØÊÉúÂøÉÊÄ•ÂêÉ‰∏çÂæóÁÉ≠Ë±ÜËÖê;ÁªèËøá‰∫ÜÂá†Â§©, ÂèëÁé∞ÂÆÉÊúâ‰∏Ä‰∫õÊûØÂè∂ÂíåÂπ≤Êûù,‰Ω†ÊòØÂú®ÂêëÊàëÂÆ£ÊàòÂêó?????‰∏äÁΩëÊü•ËØ¢‰∫Ü‰∏Ä‰∏ãÂèëÁé∞ÂÖ∂ÂÆûÊòØÊ§çÁâ©Âú®Êõ¥Êç¢‰∫ÜÁéØÂ¢É‰πãÂêé,ÈúÄË¶Å‰∏ÄÊÆµÊó∂Èó¥ÁöÑÈÄÇÂ∫î,ÊûØÂè∂Âπ≤ÊûùÂ±û‰∫éÊ≠£Â∏∏Áé∞Ë±°, ÂìàÂìàÂìà,ËøòÂ•Ω‰Ω†‰∏çÊòØÂ´åÂºÉÊàëÁöÑÂ∞èÂ±ã. ËÆ∞ÂæóÈ´ò‰∏≠ÈÇ£‰ºö,ÊØèÂ§©ÈÉΩÂú®‰π¶Êú¨ÁöÑÊµ∑Ê¥ãÈáåÈ£òËç°,ÁîüÁâ©Â≠¶Ëá™Âú®ÂÖ∂‰∏≠,Âò¥Ëæπ‰πüÊÄªÊòØÂú®ËÉåËØµÁùÄÊ§çÁâ©ÁöÑ‚ÄùÂÖâÂêà‰ΩúÁî®‚Äù,‚ÄùÂëºÂê∏‰ΩúÁî®‚Äù,Ëøô‰∫õÁü•ËØÜÊó©Â∑≤Ê∑±Ê∑±Èì≠ËÆ∞Âú®ÂøÉ‰∏≠,ÂàªÂç∞Âú®ËÑëÊµ∑,Êå•‰πã‰∏çÂéª. Ê§çÁâ©ÁôΩÂ§©ËøõË°åÂÖâÂêà‰ΩúÁî®,Âê∏Êî∂‰∫åÊ∞ßÂåñÁ¢≥,ÈáäÊîæÊ∞ßÊ∞î;Â§úÊôöÂëºÂê∏‰ΩúÁî®Âê∏Êî∂Ê∞ßÊ∞î,ÈáäÊîæ‰∫åÊ∞ßÂåñÁ¢≥.Ëøô‰∫õÁü•ËØÜËÆ©ÊàëËÆ§ËØÜ‰∫Ü‰∏ñÁïå,ÁÑ∂ËÄåÂπ∂Ê≤°ÊúâËÆ©ÊàëËÆ§ËØÜ‰ªñ.Ëµ∑ÂàùËøòÊòØÂÇª‰πé‰πéÁöÑÊØèÂ§©Âá∫Èó®‰∏äÁè≠Êó∂,ÊääËä±ÊîæÂú®Á™óÂè∞‰∏ä,ÊâìÂºÄÁ™óÂ≠ê,ËÆ©‰ªñÊ≤êÊµ¥Èò≥ÂÖâ,Êé•ÂèóÊ¥óÁ§º;ÂèØÊúÄËøëÂú®ÊµèËßà‰∏Ä‰∫õÁΩëÁ´ôÊó∂,Ê≥®ÊÑèÂà∞‰∏ÄÂè•ËØùËÆ©ÊàëÂõ∞ÊÉë‰∏çÂ∑≤‚Äî-‚ÄúÁªô‰∫àÊ§çÁâ©ÂÖÖË∂≥ÁöÑÂÖâÁÖß,ÂèØ‰ª•ÊîæÂú®Èò≥Âè∞‰∏ä,‰ΩÜË¶ÅÈÅøÂÖçÂ§™Èò≥ÂÖâÁõ¥Â∞Ñ‚Äù. ÊàëÊáµ‰∫Ü,ÊàëÁúüÁöÑÊáµ‰∫Ü, Êó¢ÁÑ∂ÈÉΩÈÄâÊã©ÊîæÂú®Á™óÂè∞‰∏ä,ÈöæÈÅìÁ™óÂè∞‰∏äÁöÑÈò≥ÂÖ≥Â∞±‰∏çÊòØÂ§™Èò≥Áõ¥Â∞Ñ‰∫ÜÂòõ????? ÊàëÂæàÂõ∞ÊÉë, Áà±Áê¢Á£®ÁöÑÊàëÂú®ÊÉ≥, Á™óÂè∞‰∏äÊúâÁéªÁíÉ,Uh‚Ä¶ ÈöæÈÅìÊòØÈöîÁùÄ‰∏ÄÂ±ÇÁéªÁíÉÂ∞±‰∏çÁÆóÁõ¥Â∞Ñ‰∫ÜÂêó,, Âìé, Ëøô‰∏™ÈóÆÈ¢ò,Âà∞Áé∞Âú®Êàë‰πüÊ≤°ÊúâÊÉ≥Ê∏ÖÊ•ö.Âú®ÁªèËøá‰∏çÊñ≠ÁöÑÊü•ËØ¢ÊàëÂèëÁé∞ÂÖ∂ÂÆûÊ§çÁâ©ËøõË°åÂÖâÂêà‰ΩúÁî®Âπ∂‰∏çÊòØ‰πãÂèØ‰ª•ÊúâÂ§™Èò≥ÂÖâÊâçÂèØ‰ª•. Ê§çÁâ©ËøõË°åÂÖâÂêà‰ΩúÁî®,Âè∂Áªø‰ΩìÊòØ‰∏ªË¶ÅÂäüËá£,È´òÁ≠âÊ§çÁâ©ÁöÑÂÖâÂêàËâ≤Á¥†‰∏ªË¶ÅÊúâÂè∂ÁªøÁ¥†ÂíåÁ±ªËÉ°ËêùÂçúÁ¥†,Âú®È¢úËâ≤‰∏äÂè∂ÁªøÁ¥†(Âè∂ÁªøÁ¥†a ÂíåÂè∂ÁªøËâ≤ b) ‰∏ªË¶ÅÂëàÁªøËâ≤, Á±ªËÉ°ËêùÂçúÁ¥†(ËÉ°ËêùÂçúÁ¥†ÂíåÂè∂ÈªÑÁ¥†) ÂëàÈªÑËâ≤.Âè∂ÁªøÁ¥†Âê∏Êî∂ÂÖâÁöÑËÉΩÂäõÊûÅÂº∫,ËÄåÂØπÊ§çÁâ©ÂÖâÂêà‰ΩúÁî®Ëµ∑Âà∞‰ΩúÁî®ÁöÑÊòØÊ≥¢ÈïøÂú® 640 ~ 670 nm ÁöÑÁ∫¢ÂÖâÈÉ®ÂàÜÂíåÊ≥¢ÈïøÂú® 430 ~ 450 ÁöÑËìùÁ¥´ÂÖâÈÉ®ÂàÜ;Âõ†‰∏∫Â§™Èò≥ÂÖâ‰∏çÊòØÂçï‰∏ÄÁöÑÂÖâ,Âà∞ËææÂú∞Ë°®ÂêéÊ≥¢ÈïøÂú® 300nm ~ 2600 nm, Âè™ÊúâÊ≥¢ÈïøÂú® 390 ~ 770 nm‰∏∫ÂèØËßÅÂÖâ(‰πüÂ∞±ÊòØÊàë‰ª¨Â∏∏ËØ¥ÁöÑÁ∫¢Ê©ôÈªÑÁªøÈùíËìùÁ¥´,ÂèäÂÖ∂Ê∑∑ÂêàËâ≤),Ëá™ÁÑ∂Â§™Èò≥ÂÖâÊòØÂèØ‰ª•Êª°Ë∂≥Ê§çÁâ©ËøõË°åÂÖâÂêà‰ΩúÁî®ÁöÑ,ÂêåÊó∂,Êàë‰ª¨Êó•Â∏∏ÁöÑÁÖßÊòéÁÅØ‰æãÂ¶Ç:ÁôΩÁÇΩÁÅØ,ËçßÂÖâÁÅØ,LED ÁÅØ,‰ªñ‰ª¨‰πüÂèØÊª°Ë∂≥Ê§çÁâ©ËøõË°åÂÖâÂêà‰ΩúÁî®,‰ΩÜ‰ªñ‰ª¨ÁöÑÊ≥¢Èïø‰∏çËÉΩÊª°Ë∂≥Ê§çÁâ©ÂÖâÂêà‰ΩúÁî®ÁöÑÊâÄÊúâÊ≥¢ÈïøÈÄâÊã©, Âè™ËÉΩÊòØÂçï‰∏Ä, ÊØîÂ¶ÇÂè™Êª°Ë∂≥Á∫¢ÂÖâÊàñËìùÁ¥´ÂÖâ.‰ΩøÁî®ÁÖßÊòéÁÅØËøõË°åÂÖâÁÖß,Âè™‰ºöÂØºËá¥Ê§çÁâ©Áº∫Â∞ë‰∏Ä‰∫õÂÖÉÁ¥†;Ê∑òÂÆù‰∏ä‰πüÊúâ‰∏ìÈó®‰π∞Ê§çÁâ©ÂÖâÂêà‰ΩúÁî®ÈúÄË¶ÅÁöÑÁ∫¢ÂÖâÂíåËìùÂÖâÁöÑÁÅØ,‰ΩÜÊÄéÊ†∑ÈÉΩ‰∏çÂ¶ÇÊ§çÁâ©Âú®Â§ñÈù¢ÊôíÂá†Â∞èÊó∂,Â§ßËá™ÁÑ∂Â∞±ÊòØËøô‰πàÁ•ûÂ•á. Êò®Â§©‰∏∫ÊàëÁöÑÂ∞èÂøÉÂøµÁßªÊ§ç‰∫ÜÊñ∞Â±Ö,Âõ†‰∏∫ÂàöÂàöÊî∂Âà∞‰ªñÊó∂,‰ªñÁöÑÂÆ∂ÊúâÁÇπÁ†¥Ë¥•,Á¥¢ÊÄßÂ∞±‰∏∫‰ªñÊç¢‰∏™Ë±™ÂÆÖ.ÂÖàÁî®Â∞èÈì≤Èì≤Êùæ‰ªñÁöÑÊ†πÂü∫(‰∏çË¶ÅË¥¥ÁùÄ‰ªñ,‰∏çÁÑ∂‰ºö‰º§ÂÆ≥Âà∞Âì¶),Ë¶Å‰∏çË¶ÅÁî®ÂäõÂéªÊãî,‰º§Âà∞Ê†πÈÉ®,Â∞±ÂÜç‰πüÊïë‰∏çÊ¥ª‰∫Ü.ÊÖ¢ÊÖ¢ÁöÑ,Ë¶ÅÁªÜÂøÉ,ÂæÖÊï¥‰ΩìÈÉΩÂæàÊùæÂä®,ËÉΩÂ§üËøûÊ†πÂ∏¶ÂúüÁöÑ,‰∏ÄËµ∑‰ªéÁõÜ‰∏≠Â∏¶Âá∫,Âú®Êñ∞ÂÆ∂ÂÖàÁªô‰ªñÊåñÂ•ΩÂÆπË∫´‰πãÊâÄ,Áî®ÊâãÊãñ‰Ωè‰ªñ,ÁªÜÂøÉÁöÑÊîæÂú®Êñ∞ÂÆ∂Â§Ñ,Âπ∂ÂüãÂ•Ω,ÁÑ∂ÂêéÂ∞ëÈáèÁöÑÁªô‰∫à‰∏Ä‰∫õÊ∞¥ÂàÜ, ËÆ©‰ªñÁöÑÂÆ∂Ê†πÂü∫Êõ¥Â§ØÂÆû,‰∏çË¶ÅËøáÂ∫¶ÊµáÊ∞¥,‰ΩÜ‰πüË¶ÅÊµáÂ§¥,‰øùÊåÅÂúüÂ£§ÊùæÂºõ,ËøôÊ†∑Ê∞ßÊ∞îÊâçËÉΩËøõÂÖ•Âà∞ÂúüÂ£§,ËÆ©Ê†πÈÉ®ËÉΩÂ§üÂÖÖÂàÜÁöÑËøõË°åÂëºÂê∏‰ΩúÁî®.‰∏ÄÁõ¥Êñ∞ÂÆ∂Âêé,Â∞èÂøÉÂøµÂ±û‰∫éËÑÜÂº±ÁöÑÊó∂ÂÄô,ËøôÊó∂‰∏çË¶ÅËÆ©‰ªñÂú®Èò≥ÂÖâ‰∏ãÊö¥Êôí,‰∏çÂà©‰∫éÊ†πÈÉ®Âú®Êñ∞ÂÆ∂ËêΩÊ†π. Êñ∞ÂÆ∂Â∑≤ÁªèÂÆâÊéíÂ¶•ÂΩì,‰πãÂêéÂ∞±ÊòØÁî®ÂøÉÂéªËßÇÂØü‰ªñÁöÑÂèòÂåñ,‰øùÊåÅÈÄöÈ£é,ÂíåÂÖâÁÖß,‰ªñÊâç‰ºöËåÅÂ£ÆÊàêÈïø.]]></content>
      <tags>
        <tag>ÁªøÊ§ç</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ê∏ÖÈ¶ôÊú®ÂÖªÊÆñÔºà‰∏ÄÔºâ]]></title>
    <url>%2F2019%2F05%2F04%2F%E6%B8%85%E9%A6%99%E6%9C%A8%E5%85%BB%E6%AE%96%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[ÊøÄÂä®ÁöÑÂøÉÔºåÈ¢§ÊäñÁöÑÊâãÔºå‰∫¨‰∏ú‰∏äÈù¢Âä®Âä®Êâã„ÄÇÂìàÂìàÔºåÂæà‰πÖÂ∞±ÊúâÊÉ≥ÂÖª‰∏Ä‰∏™ÁªøÊ§çÁöÑÊÉ≥Ê≥ïÔºåÁªèËøá‰∫ÜÂçäÂπ¥ÁöÑÊå£ÊâéÔºåÁªà‰∫éÂú® 3 Â§©ÂâçÂä®Ëµ∑‰∫ÜÊâãÔºåÂÖ•Êâã‰∏ÄÊ†™Ê∏ÖÈ¶ôÊú®ÔºåÊçÆËÄÅÊùøËØ¥ÔºåÊ∏ÖÈ¶ôÊú®ÂèØ‰ª•Êï£ÂèëÂá∫È¶ôÂë≥ÔºåÂÖÖÊª°Êï¥‰∏™ÊàøÈó¥ÔºåÈ¶ôÊ∞îÂõõÊ∫¢ÔºàËøòÊú™Èâ¥ÂÆöÔºåÂàöÊî∂Âà∞ÔºåÊ≠£ÊÄÄÁùÄÊøÄÂä®ÁöÑÂøÉÂú®ÂÜôÔºâ„ÄÇ ÂÖ∂ÂÆûÂØπËøôÊûùÊúâ‰∏ÄÁÇπÂ∞èÂ§±ÊúõÔºåÂ∞±ÊòØ‰∏™Â§¥Â§™Â∞èÔºå‰∏çËøáÊ≤°ÂÖ≥Á≥ªÔºåÂí±‰ø©ÁÜ¨ÂëóÔºåÊó©Êôö‰Ω†‰ºöÈïøÂ§ßÁöÑ„ÄÇ ÈÇ£‰πàÈóÆÈ¢òÊù•‰∫ÜÔºåÊàëÊòØ‰∏ÄÂè™Á®ãÂ∫èÁãóÔºåËøôÁßçÂº†È£ûÁª£Ëä±ÁöÑ‰∫ãÂÑøÔºåÁùÄÂÆûËÆ©ÊàëÂ§¥Áñº‰∫Ü‰∏ÄÁï™ÔºõÂπ≥Êó•ÈáåÂùêÂú®ÁîµËÑëÂâçÔºåÂôºÈáåÂï™Âï¶ÁöÑÊï≤ÁùÄÈîÆÁõòÔºå‰π¶ÂÜôÁùÄ‰∏ÄË°åË°å ABCÔºàÁ™ÅÁÑ∂ÊÉ≥Ëµ∑‰∏ÄÈ¶ñÊ≠å„ÄäÈÉΩÈÄâ C„ÄãÔºâÔºåÂæúÂæâÂú®ÁºñÁ†ÅÁöÑ‰∏ñÁïåÈáå„ÄÇÂøΩÁÑ∂‰πãÈó¥ÔºåÁîüÊ¥ª‰∏≠Â§ö‰∫Ü‰∏ÄÊ†™ÁªøÊ§çÔºåËÆ©ÈÇ£‰ªΩÈöêËóèÂú®ÊàëË∫´‰ΩìÊüêÂ§ÑÂ§öÂπ¥ÁöÑÂ∞èÁà±ÂøÉÂèàÂ¶ÇÈõ®ÂêéÊò•Á¨ã‰∏ÄËà¨ÔºåËêåÂèë‰∫ÜËµ∑Êù•„ÄÇÂèØÊòØÂïäÔºåÂú®ÁºñÁ†ÅÁöÑ‰∏ñÁïåÈáåÔºåÊàëÂèØ‰ª•Ë£ÖË£ÖÊ†∑Â≠êÔºå‰ΩÜÂú® ta ÁöÑ‰∏ñÁïåÈáåÔºåÊàëÂè™ËÉΩË£ÖÂ≠ôÂ≠ê„ÄÇ Ëá™Ê≠§‰πãÂêéÔºåÊàëÂ∞ÜË∏è‰∏äÁªøÊ§çÁöÑÂÖªÊä§‰πãÈÅìÔºåÂçÉÈáå‰πãË°åÂßã‰∫éË∂≥‰∏ãÔºåÂ∞±ËØ∑‰Ω†ÊääÊàëÂ∏¶ÂÖ•Âà∞‰Ω†ÁöÑ‰∏ñÁïåÈáåÔºåÊ∑±ÂÖ•ÁöÑ‰∫ÜËß£Âπ∂Áà±‰∏ä‰Ω†Âêß„ÄÇ OKÔºåËØ¥Ê≠£‰∫ãÂÑøÔºåÂÖàÊù•‰ªãÁªç‰∏Ä‰∏ãÊ∏ÖÈ¶ôÊú®Ôºö Ê∏ÖÈ¶ôÊú®ÈùûÂ∏∏Êî∂Âà∞Ëä±ÂèãÁöÑÂñúÁà±ÔºåÊòØ‰∏ÄÁßçÈùûÂ∏∏ÁêÜÊÉ≥ÁöÑÁõÜÊ†ΩÊ§çÁâ©ÔºåÁõÜÊôØÊ∏ÖÈ¶ôÊú®ÊëÜÊîæÂú®ÂÆ§ÂÜÖÔºåËÉΩËê•ÈÄ†Âá∫‰∏ÄÁßçÈáéÂ§ñÂ±±Ê∞¥Ê†ëÊú®ÁßªÂÖ•ÂÆ∂ÂÜÖÁöÑÊÑüËßâÔºåËá™ÁÑ∂Ê∏ÖÊñ∞„ÄÇÂéüÊú¨ÁîüÈïøÊàëÂõΩÁöÑ‰∫ëËÑë‰∏≠ÈÉ®„ÄÅÂåóÈÉ®ÂèäÂõõÂ∑ùÂçóÈÉ®Á≠âÈ´òÊµ∑ÊãîÁöÑÂπ≤ÁÉ≠Ê≤≥Ë∞∑Âú∞Â∏¶ÔºåÂÖ∑ÊúâËÄêÈò¥ÊÄßÔºåÂñúÂ•ΩÊöñÔºåÁîüÈïøÁºìÊÖ¢ÔºåÂØøÂëΩÈïøÁ≠âÁâπÁÇπÔºàËøô‰πü‰ºöÊàëÈÄâÊã©Ê†∑ ta ÁöÑÂéüÂõ†Ôºâ„ÄÇ ËøôÈáåÊúâ‰∏Ä‰∏™ÂÖªËä±ÁöÑ APPÔºåÂÖªËä±Â§ßÂÖ®ÔºåÊàëÂ∞±ÊòØÂú®Ëøô‰∏äÂ≠¶‰π†ÂÖªËä±ÁöÑÊäÄÊúØÂèäÊ≥®ÊÑè‰∫ãÈ°πÁöÑ„ÄÇ ËôΩÁÑ∂ÊàëÂπ∂Ê≤°ÊúâÁªèÁêÜËøá ta ÁöÑÂá∫ÁîüÔºå‰ΩÜÂêéÈù¢ÁöÑË∑ØÊàëÊÉ≥Âíå‰Ω†‰∏ÄËµ∑„ÄÇ‰∏∫‰Ω†Êï¥ÁêÜÂèëÂûãÔºà‰øÆÂâ™ÊûùÂè∂Ôºâ„ÄÅ‰∏∫‰Ω†ÂÆâÂÆ∂‰πê‰∏öÔºà‰∏äÁõÜÂÆöÂûãÔºâÔºåÂëµÊä§‰Ω†ÔºàÂúüÂ£§ÂíåÊ∞¥ÂàÜÔºâÔºå‰∏ÄË∑ØÂâçË°åÔºàÂÖâÁÖßÂíåÊ∏©Â∫¶Ôºâ„ÄÇ ËôΩÁÑ∂ APP ‰∏ä‰ªãÁªç‰∫ÜÊ∏ÖÈ¶ôÊú®‰∏Ä‰∫õÂñúÂ•ΩÔºå‰πüÊèê‰æõ‰∫Ü‰∏Ä‰∫õÂÖªÊÆñÊñπÊ≥ïÔºå‰ΩÜË∫´Âú®Èó®Â§ñÊ±âÁöÑÊàëËøòÊòØÂØπÁªøÊ§çÁïåÁöÑÊúØËØ≠ÊÑüÂà∞Â§¥ÁñºÔºå‰∏ãÈù¢Êù•‰ªãÁªç‰∏Ä‰∏ã ÊúØËØ≠ Âê´‰πâ ËßÅÂπ≤ËßÅÊπø ËßÅÂπ≤ÔºöÂúüÂ£§Âπ≤Ê∂∏ÔºåË°®Èù¢Áúã‰∏çÂà∞ÊΩÆÊπø„ÄÇ ËßÅÊπøÔºöÊµáÊ∞¥Êó∂ÔºåÁúãÂúüÂ£§ÂÖ®ÈÉ®Êµ∏Êπø„ÄÇ ÊµáÊ∞¥Ë¶ÅÊµáÈÄè ÊµáÊ∞¥Êó∂ÔºåËßÅÂà∞Ê∞¥‰ªéÂ∫ïÈÉ®Â≠îÊµÅÂá∫ Ëøô‰∏™Ë°®Ê†ºÊòØÊàëÂú®ÁúãÊ∏ÖÈ¶ôÊú®ÂÖªÊÆñ‰∫ãÈ°πÊó∂ÈÅáÂà∞ÁöÑÈóÆÈ¢òÔºå‰ª•Âêé‰ºöÁªßÁª≠Êõ¥Êñ∞„ÄÇËôΩÁÑ∂Ëøô‰∏™ÊúØËØ≠ÂàöÂà∞ÁúãÁöÑÊó∂ÂÄôÔºå‰∏ÄËÑ∏Êáµ„ÄÇÊàë‰πüËØ∑Êïô‰∫ÜÊàëÁöÑÂêå‰∫ãÂÖ≥‰∫éÂÖªÊä§ÁöÑÈóÆÈ¢òÔºå‰ªñ‰πüÁªÜÂøÉÁöÑËß£Èáä‰∫ÜÔºåËÄå‰∏îËøòÁâπÂà´ÁÖßÈ°æÊàëËøô‰∏™Â∞èÁôΩÔºåÁî®ÂæàÁîüÂä®ÁöÑÊØîÂñªËÆ©ÊàëÁêÜËß£ÈÄè‰∫ÜËøô‰∫õÂ±û‰∫é„ÄÇ ÈÇ£‰πàËøôÈáåÊàëÂú®ËØ¶ÁªÜÁöÑËØ¥‰∏Ä‰∏ãÊàëÁöÑÁêÜËß£Ôºö ËßÅÂπ≤ËßÅÊπøÔºöË¶ÅËß£ÈáäÁöÑÂíå‰∏äÈù¢ÁöÑÂê´‰πâ‰∏ÄÊ†∑ÔºåÈÇ£‰πàÊàëËøòË¶ÅË°•ÂÖÖÁöÑÈÉ®ÂàÜÂ∞±ÊòØÔºåÂúüÂ£§ÊòØËá™‰∏äËÄå‰∏ãÂπ≤ÁöÑÔºå Âõ†Ê≠§Ë°®Èù¢‰∏äËôΩÁÑ∂Âπ≤‰∫ÜÔºå‰ΩÜÊòØÂúüÂ£§ÂÜÖÈÉ®ÂÖ∂ÂÆûËøòÊ≤°ÊúâÂπ≤ÔºåÂ∞§ÂÖ∂ÊòØÂúüÂ£§Â∫ïÈÉ®ÔºàÊ§çÁâ©ÁöÑÊ†πÈÉ®ÔºâÔºåËøô‰∏™Êó∂ÂÄôÊàë‰ª¨ÂèØ‰ª•ÈÄöËøáÂêëÂúüÂ£§‰∏≠ÊèíÂÖ•‰∏ÄÊ†πÊú®Ê£çÔºàË¶ÅÊèíÂà∞Â∫ïÂÑøÂì¶üòèÔºâÔºå‰∏ìÈó®Áî®Êù•Ê£ÄÊµãÂúüÂ£§ÊπøÂ∫¶ÔºåÊãîÂá∫Êó∂ËÆ∞‰ΩèÊú®Ê£çË£∏Èú≤Âú®ÂúüÂ£§Â§ñÈù¢ÁöÑ‰ΩçÁΩÆÔºåÊãîÂá∫ÂêéÁî®ÊΩÆÊπøÁöÑÈÉ®‰ΩçÂéªËÆ°ÁÆó‰ΩçÁΩÆ„ÄÇ‰øùÊåÅÊ†πÈÉ®ÁöÑÊπøÊ∂¶ÔºåÂèØ‰ª•‰øÉËøõÊ§çÁâ©Ê†πÁ≥ªÁöÑÂèëÂ±ïÔºåÂõ†Ê≠§‰∏çÈúÄË¶ÅÁªèÂ∏∏ÁªôÊ§çÁâ©ÊµáÊ∞¥„ÄÇËßÅÊπø‰πüÂ∞±ÊòØÊµáÊ∞¥Êó∂Ôºå‰øùËØÅÂúüÂ£§ÊπøÊ∂¶Âç≥ÂèØ„ÄÇ ÊµáÊ∞¥Ë¶ÅÊµáÈÄèÔºöÂΩìÊàëÁúãÂà∞Êó∂Êàë‰πüÂíåÁ∫≥Èó∑‰ªÄ‰πàÊÑèÊÄùÔºåËÄå‰∏îÂíå‰∏äÈù¢ÁöÑËßÅÊπø‰ºº‰πéÂèàÂÜ≤Á™ÅÔºåÂà∞Â∫ïÊòØËßÅÂà∞ÂúüÂ£§Êπø‰∫ÜÂ∞±ÂèØ‰ª•ÔºåËøòÊòØË¶ÅÊµáÈÄèÔºüÈÇ£‰ªÄ‰πàÂèàÊòØÊµáÈÄèÂë¢ÔºüÁªèËøáÊàëÁöÑË∞ÉÁ†îÂíåÂí®ËØ¢ÔºåÁªà‰∫éÂºÑÊòéÁôΩÔºåËøô‰∫õÊÉÖÂÜµÊòØÂíåÂúüÂ£§ÁöÑÊàêÂàÜÊúâÂÖ≥Á≥ªÔºåÂõ†‰∏∫ÂúüÂ£§ÁöÑÈÄèÊ∞îÊÄß„ÄÅ‰øùÊ∞¥ÊÄßÈÉΩÂØπÊ§çÁâ©ÂèëËÇ≤ÊúâÂæàÂ§ßÂΩ±ÂìçÔºå‰∏ÄÊó¶ÊúâÈóÆÈ¢òÔºåÂæàÂèØËÉΩÂØºËá¥Âè∂Â≠êÂèëÈªÑÔºåËÑ±ËêΩÔºåÁîöËá≥Ê≠ª‰∫°„ÄÇEmmm Êàë‰ª¨ËØ¥ÊµáÈÄèÁöÑ‰∫ãÂÑøÔºåËä±ÁõÜÂ∫ïÈÉ®ÊòØÊúâ‰∏Ä‰∏™Â∞èÂè£ÁöÑÔºà‰∏çÂÖªËä±Ê†πÈÉ®‰∏çÊáÇ‰∫ãÂπ≤ÂòõÁöÑÔºåÂ∞èÊó∂ÂÄôÂ∏ÆÂ¶àÂ¶àÊµáËä±ÔºåÊ∞¥‰ªéÈÇ£ÊºèÂá∫Êù•ÔºåËøò‰ª•‰∏∫Êµ™Ë¥π‰∫ÜÂë¢Ôºâ„ÄÇÂõ†‰∏∫ÂúüÂ£§ÊàêÂàÜ‰∏çÂêåÔºåÂê∏Ê∞¥„ÄÅËìÑÊ∞¥ËÉΩÂäõ‰πü‰∏çÂêåÔºåÂÖ∑‰ΩìÂúüÂ£§ÊàêÂàÜÂÖà‰∏ç‰ªãÁªçÔºåÁÆÄÂçïËØ¥‰∏ãÂéüÁêÜ‚ÄîÂèØ‰ª•ÂÖàÊµá‰∏ÄÈÅçÂø´Ê∞¥ÔºåÂ∞±ÊòØÂ∞ÜÊ∞¥ÂàÜÂùáÂåÄÁöÑÊ¥íÂú®ÂúüÂ£§ÁöÑË°®Èù¢Ôºå‰∏çË¶ÅÁïôÂπ≤ÔºåÈÉΩÊµ∏ÊπøÔºåËßÅÁõÜÂú∞ÊúâÊ∞¥ÂàÜÊµÅÂá∫Âç≥ÂèØÔºåÁ≠âÂà∞ 10 ÂàÜÈíü‰πãÂêéÔºåÂú®ËøõË°å‰∏ÄÊ¨°ÊµáÊ∞¥ÔºåÂêåÊ†∑ÊòØÂùáÂåÄÁöÑÊµáÔºåÂπ∂Â∫ïÈÉ®ÊúâÊ∞¥ÊµÅÂá∫Âç≥ÂèØ„ÄÇËøôÊ†∑Â∞±ÂèØ‰ª•‰øùËØÅÊµáÈÄè‰∫Ü„ÄÇ Â∞èÁôΩÂú®ËøôÁåÆ‰∏ë‰∫ÜÔºåÂêéÁª≠‰ºöÊåÅÁª≠Êõ¥Êñ∞]]></content>
      <tags>
        <tag>ÁªøÊ§ç</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OkHttp Intercept.md]]></title>
    <url>%2F2019%2F04%2F30%2FOkHttp-Intercept%2F</url>
    <content type="text"><![CDATA[OkHttp InterceptorOKHttp Âú®ÂºÄÂèë‰∏≠ÁªèÂ∏∏Áî®Âà∞,ËøôÈáå‰ªãÁªç‰∏Ä‰∏ã OKHttp ÁöÑÊã¶Êà™Âô®(interceptor)ÁöÑÂá†‰∏™‰ΩøÁî®‰æãÂ≠ê Ë¶ÅÊòØÁî®Êã¶Êà™Âô®ÂæàÁÆÄÂçï,Êàë‰ª¨Âè™ÈúÄË¶ÅËá™ÂÆö‰πâ‰∏Ä‰∏™ interceptor Á±ª, Âπ∂ÂÆûÁé∞ Interceptor Êé•Âè£, ÂêåÊó∂ÈáçÂÜô intercept ÊñπÊ≥ï. ËøôÈáå‰ªãÁªç‰∏§Áßç Interceptor ÁöÑÂÆû‰æã Log Êó•Âøó (LogInterceptor)Log Âú®ÂºÄÂèëË∞ÉËØï‰∏≠ÁöÑÈáçË¶ÅÊÄß, ‰∏çË®ÄËÄåÂñª, ‰∏Ä‰∏™Â•ΩÁöÑÊó•ÂøóÊï∞ÊçÆ,ËÉΩÂ§ü‰∏∫ÂºÄÂèëÊó∂Êèê‰æõÂæàÂ§öÂ∏ÆÂä©,ÂèØ‰ª•ÈÄöËøá Log Êù•Ëé∑ÂèñÂΩìÂâçÁ®ãÂ∫èÁöÑÊâßË°åÁä∂ÊÄÅ, È°∫Â∫èÁ≠âÁ≠â. ËøôÈáå‰ªãÁªçÁöÑ Log Êó•ÂøóÊã¶Êà™Âô®,‰∏ªË¶ÅÊòØË¥üË¥£Âú®ÁΩëÁªúËØ∑Ê±ÇÊó∂,Êà™Ëé∑ËØ∑Ê±Ç‰∏≠ÁöÑ‰ø°ÊÅØ,Âπ∂Â∞ÜËØ∑Ê±Ç‰ø°ÊÅØ‰ª• Log ÁöÑÊñπÂºèËæìÂá∫Âà∞ÊéßÂà∂Âè∞‰∏ä,ÂèØÂ±ïÁé∞ÂΩìÂâçËØ∑Ê±ÇÂú∞ÂùÄ,ËØ∑Ê±ÇÂèÇÊï∞,‰ª•ÂèäËØ∑Ê±ÇÁªìÊûúÁ≠â. ËØù‰∏çÂ§öËØ¥, ‰∏ä‰ª£Á†Å. 1234567891011121314151617181920212223242526272829303132333435363738394041/*** Ëá™ÂÆö‰πâ log Êã¶Êà™Âô®,ËæìÂÖ•ËØ∑Ê±ÇÂú∞ÂùÄ,ËØ∑Ê±ÇÂèÇ,ËØ∑Ê±ÇÁªìÊûú*/public class LogInterceptor implements Interceptor &#123; @Override public Response intercept(Chain chain) throws IOException &#123; // Êã¶Êà™ËØ∑Ê±Ç‰ø°ÊÅØ,Ëé∑ÂèñËØ∑Ê±ÇÂú∞ÂùÄÂèäËØ∑Ê±ÇÂèÇÊï∞ Request request = chain.request(); long t1 = System.nanoTime(); // Ëé∑ÂèñËØ∑Ê±ÇÊñπÂºè String method = request.method(); if ("POST".equals(method)) &#123; StringBuilder sb = new StringBuilder(); if (request.body() instanceof FormBody) &#123; FormBody body = (FormBody) request.body(); for (int i = 0; i &lt; body.size(); i++) &#123; sb.append(body.encodedName(i) + "=" + body.encodedValue(i) + ","); &#125; sb.delete(sb.length() - 1, sb.length()); LogUtils.d(TAG, String.format("Sending request %s on %s %n%s %nRequestParams:&#123;%s&#125;", request.url(), chain.connection(), request.headers(), sb.toString())); &#125; &#125; else &#123; LogUtils.d(TAG, String.format("Sending request %s on %s %n%s", request.url(), chain.connection(), request.headers())); &#125; // Ëé∑ÂèñÂìçÂ∫î‰ø°ÊÅØ Response response = chain.proceed(request); long t2 = System.nanoTime(); LogUtils.d(TAG, String.format("Received response for %s in %.1fms%n%s", response.request().url(), (t2 - t1) / 1e6d, response.headers())); MediaType contentType = response.body().contentType(); String content = response.body().string(); LogUtils.d(TAG, content); ResponseBody wrappedBody = ResponseBody.create(contentType, content); return response.newBuilder().body(wrappedBody).build(); &#125; &#125; Âä†ÂèÇÂä†ÂèÇÁöÑÊÑè‰πâÂú®‰∫é,Âú®ËØ∑Ê±ÇËøáÁ®ã‰∏≠, ÈúÄË¶Å‰º†ÈÄí‰∏Ä‰∫õÂü∫Êú¨ÂèÇÊï∞,Ëøô‰∫õÂèÇÊï∞ÊòØÂü∫Êú¨‰øùÊåÅ‰∏çÂèòÁöÑ, ËÄåËøô‰∫õÂèÇÊï∞ÂèàÊòØÂêéÂè∞ÈúÄË¶ÅÊ†°È™åÁöÑ‰æùÈù†,Êàë‰ª¨‰øóÁß∞‰ªñ‰ª¨‰∏∫ÂÖ¨ÂèÇ, Â¶ÇÊûúÂú®ËØ∑Ê±ÇËøáÁ®ã‰∏≠Âú®ÊØè‰∏Ä‰∏™Êé•Âè£ÈáåÈù¢ÈÉΩÂéªÊ∑ªÂä†Ëøô‰∫õÂèÇÊï∞,ÊòæÂæóÈùûÂ∏∏ÁπÅÁêê,ËÄå‰∏îÈ∫ªÁÉ¶,ÂêéÁª≠‰∫∫ÂëòÊé•Êâã,Âèà‰ºö‰∏çÁü•ÊâÄÊé™,Áª¥Êä§Ëµ∑Êù•Áõ∏ÂΩì‰∏çÊñπ‰æø. Âõ†Ê≠§,Âú®ËøôÈáåÊàë‰ª¨ËøòÊòØÈÄöËøáËØ∑Ê±ÇÊã¶Êà™Âô®,ÈÄöËøáÊã¶Êà™Âô®ÂéªÊ∑ªÂä†Ëøô‰∫õÂèÇÊï∞. ÂÖ¨ÂèÇÊã¶Êà™Âô®Âú®ËØ∑Ê±Ç‰∏≠,Â¢ûÂä†‰∏Ä‰∫õÂÖ¨ÂÖ±ÁöÑÂèÇÊï∞. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198public class CommonParamsInterceptor implements Interceptor &#123; private Map&lt;String, String&gt; queryParamsMap = new HashMap&lt;&gt;(); private Map&lt;String, String&gt; paramsMap = new HashMap&lt;&gt;(); private Map&lt;String, String&gt; headerParamsMap = new HashMap&lt;&gt;(); private List&lt;String&gt; headerLinesList = new ArrayList&lt;&gt;(); @Override public Response intercept(Chain chain) throws IOException &#123; Request request = chain.request(); Request.Builder requestBuilder = request.newBuilder(); // process header params inject Headers.Builder headerBuilder = request.headers().newBuilder(); if (headerParamsMap.size() &gt; 0) &#123; Iterator iterator = headerParamsMap.entrySet().iterator(); while (iterator.hasNext()) &#123; Map.Entry entry = (Map.Entry) iterator.next(); headerBuilder.add((String) entry.getKey(), (String) entry.getValue()); &#125; &#125; if (headerLinesList.size() &gt; 0) &#123; for (String line : headerLinesList) &#123; headerBuilder.add(line); &#125; requestBuilder.headers(headerBuilder.build()); &#125; // process header params end // process queryParams inject whatever it's GET or POST if (queryParamsMap.size() &gt; 0 &amp;&amp; "GET".equals(request.method())) &#123;// if (queryParamsMap.size() &gt; 0) &#123; request = injectParamsIntoUrl(request, requestBuilder, queryParamsMap); &#125; // process post body inject if (paramsMap != null &amp;&amp; paramsMap.size() &gt; 0 &amp;&amp; "POST".equals(request.method())) &#123; if (request.body() instanceof FormBody) &#123; FormBody.Builder newFormBodyBuilder = new FormBody.Builder(); if (paramsMap.size() &gt; 0) &#123; Iterator iterator = paramsMap.entrySet().iterator(); while (iterator.hasNext()) &#123; Map.Entry entry = (Map.Entry) iterator.next(); newFormBodyBuilder.add((String) entry.getKey(), (String) entry.getValue()); &#125; &#125; FormBody oldFormBody = (FormBody) request.body(); int paramSize = oldFormBody.size(); if (paramSize &gt; 0) &#123; for (int i = 0; i &lt; paramSize; i++) &#123; newFormBodyBuilder.add(oldFormBody.name(i), oldFormBody.value(i)); &#125; &#125; requestBuilder.post(newFormBodyBuilder.build()); request = requestBuilder.build(); &#125; else if (request.body() instanceof MultipartBody) &#123; MultipartBody.Builder multipartBuilder = new MultipartBody.Builder().setType(MultipartBody.FORM); Iterator iterator = paramsMap.entrySet().iterator(); while (iterator.hasNext()) &#123; Map.Entry entry = (Map.Entry) iterator.next(); multipartBuilder.addFormDataPart((String) entry.getKey(), (String) entry.getValue()); &#125; List&lt;MultipartBody.Part&gt; oldParts = ((MultipartBody) request.body()).parts(); if (oldParts != null &amp;&amp; oldParts.size() &gt; 0) &#123; for (MultipartBody.Part part : oldParts) &#123; multipartBuilder.addPart(part); &#125; &#125; requestBuilder.post(multipartBuilder.build()); request = requestBuilder.build(); &#125; &#125; return chain.proceed(request); &#125; private boolean canInjectIntoBody(Request request) &#123; if (request == null) &#123; return false; &#125; if (!TextUtils.equals(request.method(), "POST")) &#123; return false; &#125; RequestBody body = request.body(); if (body == null) &#123; return false; &#125; MediaType mediaType = body.contentType(); if (mediaType == null) &#123; return false; &#125; if (!TextUtils.equals(mediaType.subtype(), "x-www-form-urlencoded")) &#123; return false; &#125; return true; &#125; // func to inject params into url private Request injectParamsIntoUrl(Request request, Request.Builder requestBuilder, Map&lt;String, String&gt; paramsMap) &#123; HttpUrl.Builder httpUrlBuilder = request.url().newBuilder(); if (paramsMap.size() &gt; 0) &#123; Iterator iterator = paramsMap.entrySet().iterator(); while (iterator.hasNext()) &#123; Map.Entry entry = (Map.Entry) iterator.next(); httpUrlBuilder.addEncodedQueryParameter((String) entry.getKey(), (String) entry.getValue()); &#125; requestBuilder.url(httpUrlBuilder.build()); return requestBuilder.build(); &#125; return request; &#125; private static String bodyToString(final RequestBody request) &#123; try &#123; final RequestBody copy = request; final Buffer buffer = new Buffer(); if (copy != null) copy.writeTo(buffer); else return ""; return buffer.readUtf8(); &#125; catch (final IOException e) &#123; return "did not work"; &#125; &#125; public static class Builder &#123; CommonParamsInterceptor interceptor; public Builder() &#123; interceptor = new CommonParamsInterceptor(); &#125; public Builder addParam(String key, String value) &#123; interceptor.paramsMap.put(key, value); return this; &#125; public Builder addParamsMap(Map&lt;String, String&gt; paramsMap) &#123; interceptor.paramsMap.putAll(paramsMap); return this; &#125; public Builder addHeaderParam(String key, String value) &#123; interceptor.headerParamsMap.put(key, value); return this; &#125; public Builder addHeaderParamsMap(Map&lt;String, String&gt; headerParamsMap) &#123; interceptor.headerParamsMap.putAll(headerParamsMap); return this; &#125; public Builder addHeaderLine(String headerLine) &#123; int index = headerLine.indexOf(":"); if (index == -1) &#123; throw new IllegalArgumentException("Unexpected header: " + headerLine); &#125; interceptor.headerLinesList.add(headerLine); return this; &#125; public Builder addHeaderLinesList(List&lt;String&gt; headerLinesList) &#123; for (String headerLine : headerLinesList) &#123; int index = headerLine.indexOf(":"); if (index == -1) &#123; throw new IllegalArgumentException("Unexpected header: " + headerLine); &#125; interceptor.headerLinesList.add(headerLine); &#125; return this; &#125; public Builder addQueryParam(String key, String value) &#123; interceptor.queryParamsMap.put(key, value); return this; &#125; public Builder addQueryParamsMap(Map&lt;String, String&gt; queryParamsMap) &#123; interceptor.queryParamsMap.putAll(queryParamsMap); return this; &#125; public CommonParamsInterceptor build() &#123; return interceptor; &#125; &#125;&#125; Âä†Á≠æÊã¶Êà™Âô®‰∫íËÅîÁΩëÊòØ‰∏Ä‰∏™ÂºÄÊîæÁöÑÁéØÂ¢É,Âç±Èô©Êó†Â§Ñ‰∏çÂú®,Âä†ÂØÜÈÄö‰ø°ÊòØÂÆâÂÖ®ÁöÑÂü∫Á°Ä. Âä†ÂØÜÁöÑÊñπÂºèÂèàÊúâÂæàÂ§ö,ÊØîÂ¶ÇÂØπÁß∞Âä†ÂØÜ/ÈùûÂØπÁß∞Âä†ÂØÜ/Hash(‰∏•Ê†ºÁöÑËØ¥‰∏çÊòØÂä†ÂØÜ),ËøôÈáåÂÖà‰∏çÂØπÂä†ÂØÜËøõË°å‰ªãÁªç,Êàë‰ª¨ËÅäËÅäÂä†Á≠æ; Âä†Á≠æ,ÂÖ∂ÂÆûÂ∞±ÊòØÁªôÊä•ÊñáÂÅö‰∏Ä‰∏™ÊëòË¶Å,Áõ∏ÂêåÁöÑÁ≠æÂêçÁÆóÊ≥ïÂæóÂà∞ÁöÑÊëòË¶ÅÊòØÁõ∏ÂêåÁöÑ,ÊØîÂ¶ÇMD5, SH1, SH256Á≠â, ÁÆÄÂçïÁöÑÂä†Á≠æÂπ∂‰∏çËÉΩÈò≤Ê≠¢ÁØ°Êîπ,Âõ†‰∏∫ÊîªÂáªËÄÖÂèØ‰ª•ÁØ°ÊîπÂêé,Ëá™Â∑±ÁîüÊàêÊñ∞ÁöÑÁ≠æÂêç.ÊúçÂä°Á´ØÈ™åÁ≠æËøòÊòØÂèØ‰ª•ÈÄöËøáÁöÑ,Âõ†Ê≠§Âä†Á≠æÊó∂‰∏ÄÂÆöË¶ÅÂåÖÂê´‰∏Ä‰∫õÁßÅÊúâÁöÑ‰∏úË•ø,ÊØîÂ¶ÇÁßÅÈí•. ËøôÈáå‰ªãÁªç‰∏ÄÁßçÂä†Á≠æÊñπÂºè, Âä†ÂØÜËßÑÂàô Ê†πÊçÆËØ∑Ê±ÇÂèÇÊï∞ key ËøõË°åÊéíÂ∫è ÊåâÊéíÂ•ΩÁöÑÈ°∫Â∫èÁªÑË£ÖÊàê key=value&amp;key=value ÂΩ¢ÂºèÁöÑÂ≠óÁ¨¶‰∏≤ Â∞Ü‰∏äËø∞Â≠óÁ¨¶‰∏≤ÊãºÊé• mid, timestamp, key(ÁßÅÈí•) ,ÊúÄÁªàÂΩ¢Êàê key=value&amp;key=value&amp;mid&amp;timestamp&amp;key ÁöÑÂ≠óÁ¨¶‰∏≤ Â∞ÜÂ≠óÁ¨¶‰∏≤ md5 32‰ΩçÂ∞èÂÜôÂä†ÂØÜ, ÁîüÊàê auth. ‰∏Ä‰∏™ÁÆÄÂçïÁöÑÂä†Á≠æÈÄªËæëÂ∞±ÊòØËøôÊ†∑,‰∏ãÈù¢‰ª£Á†ÅÂ∞±ÊòØÂØπËøôÁßçËßÑÂàôÁöÑÂÆûÁé∞,Áúã‰ª£Á†Å‚Üì‚Üì‚Üì‚Üìpublic class AuthorizeInterceptor implements Interceptor &#123; private static final String TAG = "AuthorizeInterceptor"; /** * ÁîüÊàê auth ÁöÑÁßÅÈí• */ private String authKey; /** * ÂΩìÂâçËÆæÂ§á mid,Áî®Êù•ÁîüÊàê auth * Êï∞ÊçÆÁî± Builder Á±ª‰º†ÂÖ• */ private String mid = ""; private AuthorizeInterceptor() &#123; &#125; @Override public Response intercept(Chain chain) throws IOException &#123; Request request = chain.request(); Request.Builder requestBuilder = request.newBuilder(); String url = request.url().toString(); LogUtils.d(TAG, url); if ("POST".equals(request.method())) &#123; request = injectionParamIntoBody(request, requestBuilder); &#125; else if ("GET".equals(request.method())) &#123; request = injectionAuthIntoUrl(request, requestBuilder); &#125; return chain.proceed(request); &#125; /** * GET ËØ∑Ê±ÇÊñπÂºè, ÁîüÊàêÊéàÊùÉÂíåÊ∑ªÂä†Êó∂Èó¥Êà≥ * * @param request * @param requestBuilder * @return */ private Request injectionAuthIntoUrl(Request request, Request.Builder requestBuilder) &#123; //Ëé∑ÂèñÂà∞ËØ∑Ê±ÇÂú∞ÂùÄapi HttpUrl newHttpUrl = request.url(); TreeMap&lt;String, String&gt; authMap = new TreeMap&lt;&gt;(); //ÈÄöËøáËØ∑Ê±ÇÂú∞ÂùÄ(ÊúÄÂàùÂßãÁöÑËØ∑Ê±ÇÂú∞ÂùÄ)Ëé∑ÂèñÂà∞ÂèÇÊï∞ÂàóË°® Set&lt;String&gt; parameterNames = newHttpUrl.queryParameterNames(); long timestamp = System.currentTimeMillis(); for (String key : parameterNames) &#123; //Âæ™ÁéØÂèÇÊï∞ÂàóË°® if (!"basic".equals(key)) &#123; // Ëé∑ÂèñÂèÇÊï∞value, String paramValue = newHttpUrl.queryParameter(key); if (!TextUtils.isEmpty(paramValue)) &#123; authMap.put(key, paramValue); &#125; &#125; &#125; LogUtils.d(TAG, "===================================== Get ÂºÄÂßãÁîüÊàê auth =========================================="); HttpUrl.Builder newBuilder = request.url().newBuilder() .addEncodedQueryParameter("auth", assembleAuth(authMap, timestamp, false)) .addEncodedQueryParameter("timestamp", String.valueOf(timestamp)); requestBuilder.url(newBuilder.build()); return requestBuilder.build(); &#125; /** * Â∞ÜÂèÇÊï∞Ê≥®ÂÖ•Âà∞ POST ËØ∑Ê±ÇÁöÑ body ‰∏≠ * * @param request * @param requestBuilder * @return */ private Request injectionParamIntoBody(Request request, Request.Builder requestBuilder) &#123; if (request.body() instanceof FormBody) &#123; // Â§ÑÁêÜÊ≠£Â∏∏Ë°®ÂçïËØ∑Ê±ÇÊñπÂºè FormBody oldFormBody = (FormBody) request.body(); return assembleFormBody(request, oldFormBody, requestBuilder); &#125; else if (request.body() instanceof MultipartBody) &#123; return assembleMultipartBody(request, requestBuilder); &#125; else &#123; return request; &#125; &#125; /** * ÊûÑÂª∫ÊµÅÂ™í‰ΩìÂèÇÊï∞ÁöÑ body * * @param request * @param builder * @return */ private Request assembleMultipartBody(Request request, Request.Builder builder) &#123; // Â§ÑÁêÜÊµÅÁöÑËØ∑Ê±ÇÊñπÂºè MultipartBody body = (MultipartBody) request.body(); TreeMap&lt;String, String&gt; authMap = new TreeMap&lt;&gt;(); long timestamp = System.currentTimeMillis(); // Ëé∑ÂèñÂèÇÊï∞ key Âèä value Êï∞ÊçÆ, Â∞ÜÊï∞ÊçÆÂÜôÂÖ•Âà∞ TreeMap ‰∏≠ËøõË°åÊéíÂ∫è if (body != null &amp;&amp; body.parts().size() &gt; 0) &#123; for (MultipartBody.Part part : body.parts()) &#123; // Âè™Â§ÑÁêÜ contentType ‰∏∫Á©∫,Êàñ‰∏∫ text ÁöÑÊÉÖÂÜµ, image ‰∏ä‰º†ÂõæÁâáÁöÑÂ≠óÊÆµ,‰∏çËøõË°åÂ§ÑÁêÜ if (part.body().contentType() == null || !"image".equals(part.body().contentType().type()) || "text".equals(part.body().contentType().type())) &#123; Headers headers = part.headers(); // ‰ªé header ‰∏≠Ëé∑Âèñ Key, form-data; name= ÁöÑÂ≠óÊÆµËøáÊª§Ëé∑Âèñkey // Á≠õÈÄâÊéâ basic, Ëé∑ÂèñÂà∞ÂΩìÂâç header,ÂØπÂ∫îÁöÑ RequestBody, ÈÄöËøá buffer ÁöÑÊñπÂºè,Ëé∑ÂèñÂà∞ value // Â∞Ü key Âíå value Â°´ÂÖÖÂà∞ TreeMap ‰∏≠ for (int i = 0; i &lt; headers.names().size(); i++) &#123; String headerName = headers.value(i); if (headerName.contains("form-data; name=")) &#123; String key = headerName.replace("form-data; name=", "").replace("\"", ""); if (!"basic".equals(key)) &#123; String value = body2String(part.body()); if (!TextUtils.isEmpty(value)) &#123; authMap.put(key, body2String(part.body())); &#125; &#125; &#125; &#125; &#125; &#125; &#125; LogUtils.d(TAG, "============================ MultipartBody ÂáÜÂ§áÁîüÊàê Auth ====================================="); MultipartBody.Builder multipartBuilder = new MultipartBody.Builder().setType(MultipartBody.FORM); multipartBuilder.addFormDataPart("auth", assembleAuth(authMap, timestamp, false)); multipartBuilder.addFormDataPart("timestamp", String.valueOf(timestamp)); List&lt;MultipartBody.Part&gt; oldParts = ((MultipartBody) request.body()).parts(); if (oldParts != null &amp;&amp; oldParts.size() &gt; 0) &#123; for (MultipartBody.Part part : oldParts) &#123; multipartBuilder.addPart(part); &#125; &#125; builder.post(multipartBuilder.build()); return builder.build(); &#125; /** * ÊûÑÂª∫ Auth Êï∞ÊçÆ * &lt;p&gt; * TreeMap Êï∞ÊçÆ,ÊåâÁÖßÂ≠óÊØçÈ°∫Â∫èËá™Âä®ÊéíÂ∫èÂêé,ÈÅçÂéÜÊï∞ÊçÆ,ÊãºÊé•Êàê key=value&amp;key=value ÁöÑÂΩ¢Âºè, * Map ÊãºÊé•ÂÆåÊàêÂêé,Âú®ÂÖ∂ÂêéÈúÄË¶ÅÂÜçÊ¨°ÊãºÊé•‰∏ä &amp;mid&amp;timestamp&amp;key * &lt;p&gt; * ÊúÄÂêéÂ∞ÜÊï∞ÊçÆ MD5 ËΩ¨Âåñ‰∏∫ 32 ‰ΩçÂ∞èÂÜôÂπ∂ËøîÂõû * * @param treeMap ÊûÑÂª∫ Auth ÁöÑÂÖ∑‰ΩìÊï∞ÊçÆ * @param timestamp ÂΩìÂâçÊó∂Èó¥Êà≥ * @param isNeedDecode ÊòØÂê¶ÈúÄË¶ÅËß£Á†Å * @return ËøîÂõû auth Êï∞ÊçÆ --- 32‰ΩçÂ∞èÂÜô */ private String assembleAuth(TreeMap&lt;String, String&gt; treeMap, long timestamp, boolean isNeedDecode) &#123; StringBuilder stringBuilder = new StringBuilder(); if (treeMap.size() &gt; 0) &#123; for (Map.Entry&lt;String, String&gt; stringStringEntry : treeMap.entrySet()) &#123; try &#123; stringBuilder.append(stringStringEntry.getKey()) .append("=") .append(isNeedDecode ? URLDecoder.decode(stringStringEntry.getValue(), "UTF-8") : stringStringEntry.getValue()) .append("&amp;"); &#125; catch (UnsupportedEncodingException e) &#123; e.printStackTrace(); &#125; &#125; &#125; treeMap.clear(); stringBuilder.append(mid) .append("&amp;") .append(timestamp) .append("&amp;") .append(authKey); LogUtils.d(TAG, stringBuilder.toString()); LogUtils.d(TAG, "============================ Auth ÁîüÊàêÂÆåÊàê ====================================="); return MD5.MD5_32(stringBuilder.toString()); &#125; /** * body ËΩ¨ string Ëé∑ÂèñÂÆûÈôÖÂèÇÊï∞ÂÄº * * @param body Part body * @return part ‰∏≠ÂÜôÂ¶ÇÁöÑÂèÇÊï∞Êï∞ÊçÆ */ private String body2String(RequestBody body) &#123; if (body != null) &#123; Buffer buffer = new Buffer(); try &#123; body.writeTo(buffer); Charset charset = Charset.forName("UTF-8"); MediaType contentType = body.contentType(); if (contentType != null) &#123; charset = contentType.charset(charset); &#125; assert charset != null; return buffer.readString(charset); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; return ""; &#125; /** * ÁªÑË£Ö Form Ë°®ÂçïËØ∑Ê±ÇÊï∞ÊçÆ * * @param request * @param oldFormBody * @param requestBuilder * @return */ private Request assembleFormBody(Request request, FormBody oldFormBody, Request.Builder requestBuilder) &#123; TreeMap&lt;String, String&gt; authMap = new TreeMap&lt;&gt;(); // ÈÅçÂéÜËØ∑Ê±ÇÂèÇÊï∞,ÈùûÁ©∫ÂèÇÊï∞,Ê∑ªÂä†Âà∞ÈõÜÂêà‰∏≠ for (int i = 0; i &lt; oldFormBody.size(); i++) &#123; if (!"basic".equals(oldFormBody.encodedName(i)) &amp;&amp; !TextUtils.isEmpty(oldFormBody.encodedValue(i))) &#123; authMap.put(oldFormBody.encodedName(i), oldFormBody.encodedValue(i)); &#125; &#125; long timestamp = System.currentTimeMillis(); if (authMap.size() != 0) &#123; LogUtils.d(TAG, "============================ FormBody ÂáÜÂ§áÁîüÊàê auth ==========================="); // ÁîüÊàê auth Êï∞ÊçÆ FormBody.Builder newFormBody = new FormBody.Builder(); for (int i = 0; i &lt; oldFormBody.size(); i++) &#123; newFormBody.addEncoded(oldFormBody.encodedName(i), oldFormBody.encodedValue(i)); &#125; newFormBody.add("auth", assembleAuth(authMap, timestamp, true)); newFormBody.add("timestamp", String.valueOf(timestamp)); requestBuilder.method(request.method(), newFormBody.build()); return requestBuilder.build(); &#125; return request; &#125; /** * Builder ÊûÑÈÄ†ÂáΩÊï∞,Áî®Êù•ËÆæÁΩÆ Authorize ÁöÑÁõ∏ÂÖ≥ÂèÇÊï∞,ÂèäÂàõÂª∫Â∑•‰Ωú */ public static class Builder &#123; AuthorizeInterceptor authorizeInterceptor; public Builder() &#123; authorizeInterceptor = new AuthorizeInterceptor(); &#125; public Builder setMid(String mid) &#123; authorizeInterceptor.mid = mid; return this; &#125; public Builder setAuthKey(String key) &#123; authorizeInterceptor.authKey = key; return this; &#125; public AuthorizeInterceptor build() &#123; return authorizeInterceptor; &#125; &#125;&#125; ËØ•Âä†Á≠æÊñπÂºè,ËÆ≤ËØ∑Ê±ÇÂèÇÊï∞ÊãºÊé•‰∏∫ key=value ÁöÑÊñπÂºè, ÈöæÁÇπÂú®‰∫éÂ¶Ç‰Ωï‰ªé OkHttp ‰∏≠Ëé∑ÂèñËøô‰∫õÂèÇÊï∞,Âú® GET ËØ∑Ê±ÇÂíå POST ÁöÑÂ§ÑÁêÜÊñπÂºèÂèà‰∏çÂêå,‰ª£Á†Å‰∏≠ POST ËØ∑Ê±ÇÊñπÂºè,Âèà‰ºöÊ†πÊçÆËØ∑Ê±Ç‰º†ÈÄíÁöÑ contentType ËÄåÂèàÊúâÊâÄ‰∏çÂêå,ËøôÈáå‰ªãÁªç‰∫ÜFormË°®ÂçïÊèê‰∫§Âíå Multipart ‰∏ä‰º†Êñá‰ª∂ÁöÑÂèÇÊï∞Ëé∑ÂèñÊñπÂºè,ÂÖ∂‰ªñÁöÑËØ∑‰∏æ‰∏ÄÂèç‰∏â. ÊñáÁ´†ÊúâÁëïÁñµ, ËØ∑Â§ßÁ•ûÊâπËØÑÊåáÊ≠£.]]></content>
      <tags>
        <tag>OkHttp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â§ö‰∏™ ssh ÂÖ¨Èí•Êèê‰∫§‰ª£Á†ÅÂà∞‰∏çÂêåÂπ≥Âè∞]]></title>
    <url>%2F2019%2F04%2F17%2F%E5%A4%9A%E4%B8%AA-ssh-%E5%85%AC%E9%92%A5%E6%8F%90%E4%BA%A4%E4%BB%A3%E7%A0%81%E5%88%B0%E4%B8%8D%E5%90%8C%E5%B9%B3%E5%8F%B0%2F</url>
    <content type="text"><![CDATA[[TOC] Â§ö‰∏™ SSH ÂÖ¨Èí•Êèê‰∫§‰ª£Á†ÅÂà∞‰∏çÂêåÂπ≥Âè∞‰Ωú‰∏∫‰∏Ä‰∏™ÊäÄÊúØÂºÄÂèë‰∫∫ÂëòÔºåÂÖç‰∏ç‰∫ÜÂú® github ‰ª•Âèä gitlab ‰ª•ÂèäÂÖ∂‰ªñ git Âπ≥Âè∞‰∏äËøõË°å‰ª£Á†ÅÁÆ°ÁêÜÔºõÂ∑•‰Ωú‰∏≠ÊÇ®ÂèØËÉΩ‰ΩøÁî® svn ÔºàËøô‰∏çÂú®Êàë‰ª¨ÁöÑËÆ®ËÆ∫ËåÉÂõ¥Ôºâ,‰πüÊúâÂèØËÉΩ‰ΩøÁî® git, ÁîüÊ¥ª‰∏≠ÔºåÊÇ®ÂèØËÉΩ‰ºöÂ∞Ü‰∏Ä‰∫õÂÜÖÂÆπÂàÜ‰∫´Âà∞‰Ω†ÁöÑ github ‰∏äÔºå ‰æõÂ§ßÂÆ∂ÂèÇÈòÖ„ÄÇ git ÂàõÂª∫ÁâàÊú¨Â∫ìÂæàÂÆπÊòìÔºå clone ‰ª£Á†Å‰πü‰ªÖ‰ªÖÊòØÁÆÄÂçïÁöÑ‰∏ÄÂè• git clone https://github.com/xxxx.gitÔºåÂºÇÊàñÊòØ git clone git@github.com:xxxxx.gitÔºõÂΩìÁÑ∂Ôºå‰ΩøÁî® https ÁöÑÊñπÂºèÁÆÄÂçïÊòìÊìç‰ΩúÔºàÊú¨‰∫∫ËÆ§‰∏∫ÊòØ‰∏Ä‰∏™ÂÇªÁìúÁõ∏Êú∫ÔºâÔºå‰ΩÜÊòØÈÄöËøá‰ΩøÁî® https ÁöÑÊñπÂºèÔºåÁªèÂ∏∏‰ºöÈÅáÂà∞ÈúÄË¶ÅËæìÂÖ•Ë¥¶Âè∑ÂíåÂØÜÁ†ÅÁöÑÊÉÖÂÜµÔºåËøôÂ§ßÂ§ßÁöÑÂä†Â§ß‰∫ÜÂÆâÂÖ®ÈóÆÈ¢òÔºåËôΩÁÑ∂Êüê dear ÁöÑÂõæÂΩ¢ÂåñÂ∑•ÂÖ∑Ôºå‰ºöÂ∏ÆÂä©Êàë‰ª¨ remeber Ë¥¶Âè∑ÂíåÂØÜÁ†ÅÔºåÈÅøÂÖç‰∫ÜÈáçÂ§çËæìÂÖ•Ôºå‰ΩÜËøô‰∏çÂú®Êàë‰ª¨ÁöÑËÆ®ËÆ∫ËåÉÂõ¥Ôºà‰∏™‰∫∫ÂæàÈÑôËßÜ‰ΩøÁî®ÂõæÂΩ¢ÂåñÁïåÈù¢ÁöÑÔºâÔºåÊé•‰∏ãÊù•Ë¶ÅËØ¥ÁöÑÂ∞±ÊòØ‰ΩøÁî® SSH ÁöÑÊñπÂºèÊù•Â§ÑÁêÜ git ÁöÑÁâàÊú¨ÁÆ°ÁêÜ„ÄÇ ÁîüÊàê SSH ÂØÜÈí•‰ΩøÁî® SSH ÂàõÂª∫‰∏ÄÂ•óÂÖ¨ÂØÜÈí•ÔºåÂ∞ÜÂÖ¨Èí•Ê∑ªÂä†Âà∞‰Ω†Ë¶Å‰ΩøÁî®ÁöÑ Git Âπ≥Âè∞Ë¥¶Êà∑‰∏ã 1ssh-keygen -t rsa -C &quot;your email addr&quot; -f ~/.ssh/github Ê≥®ÊÑèÔºö -f ÂêéÈù¢ÁöÑÂèÇÊï∞ÊòØÁî®Êù•Ëá™ÂÆö‰πâ SSH KEY ÁöÑÂ≠òÊîæË∑ØÂæÑÔºåÂ¶ÇÊûú‰∏çÈúÄË¶Å‰πüÂèØ‰ª•Ëá™ -f ÂºÄÂßãÁúÅÁï• ÂëΩ‰ª§ËæìÂÖ•ÂÆåÊàêÂêéÔºåËøûÂáª3‰∏ãÂõûËΩ¶Â∞±ÂèØ‰ª•Ôºå‰∏çÈúÄË¶ÅÂ§ÑÁêÜÊìç‰ΩúÔºàÈô§Èùû‰Ω†ÂæàÊÉ≥Â§ÑÁêÜÔºâ Ê∑ªÂä†ÁîüÊàêÁöÑ SSH ÂÖ¨Èí•Ê∑ªÂä† ssh ÂÖ¨Èí•Âà∞ github ** ÊâìÂºÄ https://github.com/settings/profile ÔºåÈÄâÊã© SSH and GPG keys ÁÇπÂáª New SSH key title ÂèØ‰ª•Èöè‰æøÂÜôÔºåÂª∫ËÆÆËßÅÂêçÁü•ÊÑèÔºåËÉΩÁü•ÈÅìÊòØÂì™Âè∞ËÆæÂ§á key ÈÄöËøáÂàöÂàöÈÄöËøá SSH ÂëΩ‰ª§ÁîüÊàêÁöÑ .pub Êñá‰ª∂‰∏≠Â§çÂà∂Âç≥ÂèØ„ÄÇÊñá‰ª∂Ë∑ØÂæÑ .ssh/id_rsa.pub ÂºÇÊàñÊòØÂ≠òÂú®ÊÇ® -f ‰πãÂêéÊåáÂÆöÁöÑÁõÆÂΩï„ÄÇ ÁÇπÂáª add SSH key ÈÖçÁΩÆÂ§ö‰∏™ sshÈÖçÁΩÆÂ§ö‰∏™ ssh Êó∂ÔºåÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºö Â¶ÇÊûú‰Ω†Êú™ÊåáÂÆöÂÖ¨Èí•ÁöÑÂ≠òÂÇ®Ë∑ØÂæÑÔºåÈÇ£‰πà‰Ω†ÈúÄË¶Å‰∏Ä‰∏™‰∏Ä‰∏™ÁöÑÊâãÂä®ÂéªÂàõÂª∫ÔºåÂπ∂ÈÖçÁΩÆ ssh ÂÖ¨Èí•Âà∞ÂØπÂ∫îÂπ≥Âè∞ÔºåÂê¶ÂàôÔºåÂêéÁª≠ÁöÑ ssh ÂàõÂª∫ËøáÁ®ãÔºå ‰ºöË¶ÜÁõñÊéâ‰πãÂâçÂàõÂª∫ÁöÑ„ÄÇ ssh-keygen ‰ºöÂêåÊó∂ÂàõÂª∫ id_rsa Âíå id_rsa.pub ‰∏§‰∏™Êñá‰ª∂Ôºå .pub ÊòØÂÖ¨Èí•Ôºå ‰∏çÂ∏¶ÂêéÁºÄÁöÑÊòØ‰Ω†ÁöÑÁßÅÈí•„ÄÇ ÂêåÊó∂ÈÖçÁΩÆÂ§ö‰∏™ ssh Êó∂ÔºåÈúÄË¶ÅÊÇ®‰øùÁïôÁßÅÈí•Âú® .ssh ÁõÆÂΩï‰∏ãÔºå‰∏∫‰øùËØÅÂ§öÂπ≥Âè∞ÈÉΩÂèØ‰ª•‰ΩøÁî®ÔºåÊÇ®ÈúÄË¶ÅÊâãÂä®‰øÆÊîπ‰∏Ä‰∏ã id_rsa Êñá‰ª∂ÁöÑÂêçÁß∞Ôºå.pub Â∞±Èöè‰æø‰∫ÜÔºåÈÖçÁΩÆÂÆåÔºåÂ∞±Ê≤°Áî®‰∫Ü„ÄÇ Â∞ÜÂØÜÈí•Ê∑ªÂä†Âà∞ ssh-agent ‰∏≠ 1ssh-add ~.ssh/id_rsa 123456# Êü•Áúã agent ‰∏≠ÁöÑÂØÜÈí•ssh-add -l# Êü•Áúã agent ‰∏≠ÁöÑÂÖ¨Èí•ssh-add -L# Âà†Èô§ agent ‰∏≠ÁöÑÂØÜÈí•ssh-add -d .ssh/id_xxx.pub ‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂ËØ¥‰∫ÜÂçäÂ§©ÔºåÁªà‰∫éÂà∞ÈáçÁÇπ‰∫Ü Âú® ~/.ssh ÁõÆÂΩï‰∏ãÊñ∞Âª∫‰∏Ä‰∏™ config Êñá‰ª∂ ÂØπÔºåÊ≤°ÊúâÈîôÔºåÂ∞±ÊòØ‰∏Ä‰∏™ËøûÂêéÁºÄÈÉΩÊ≤°ÊúâÁöÑÊñá‰ª∂ÔºåËøô‰∏™Êñá‰ª∂Áî®Êù•Â≠òÂÇ®ÊÇ®ÁöÑÊâÄÊúâÂπ≥Âè∞‰ø°ÊÅØÔºå‰ª•ÂèäÂπ≥Âè∞ÂØπÂ∫î‰ΩøÁî®ÁöÑ ssh ÂØÜÈí•„ÄÇ touch config Ê∑ªÂä†‰ª•‰∏ãÈÖçÁΩÆ‰ø°ÊÅØ 12345678910111213# githubHost github.com # ‰πüÂèØ‰ª•ÊòØÊï∞Â≠ó ip Âú∞ÂùÄÔºåÂä†‰∏çÂä† http/https ÈÉΩÊó†ÊâÄË∞ìHostName github.com # Âêå‰∏äPreferredAuthentications publickey # ËøôÈáå‰∏çË¶Å‰øÆÊîπIdentityFile ~/.ssh/id_rsa_github # ËøôÈáåÁöÑÊñá‰ª∂Âêç‰øÆÊîπ‰∏∫ËØ•Âπ≥Âè∞ÂØπÂ∫îÁöÑÂØÜÈí•# gitlabHost ÂÖ¨Âè∏ gitlab Âú∞ÂùÄHostName ÂÖ¨Âè∏ gitlab Âú∞ÂùÄPreferredAuthentications publickeyIdentityFile ~/.ssh/id_rsa_gitlab... ÊµãËØïÂëΩ‰ª§‰∏∫Ôºö 1ssh -T git@github.com ÁªìÊûú 1Hi boywithsmalleyes! You&apos;ve successfully authenticated, but GitHub does not provide shell access. Âè™ÈúÄË¶ÅÊõøÊç¢ÂêéÈù¢ÁöÑ git‰ªìÂ∫ìÂú∞ÂùÄ, ÂÖ∂‰ªñÁâàÊú¨Â∫ìÈÉΩÂèØ‰ª•ËøõË°åÊµãËØï„ÄÇ ÁªìËØ≠ËØ¥‰∫ÜÂçäÂ§©Ôºå ËøòÊòØË¶ÅËÆ∞‰Ωè‰∏ÄÁÇπÔºåÊó¢ÁÑ∂Ë¶Å‰ΩøÁî® ssh ÁöÑÊñπÂºèËøõË°åÁâàÊú¨ÁÆ°ÁêÜÔºåÈÇ£‰πàÂú® clone ‰ª£Á†ÅÊó∂Ôºå‰πüË¶Å‰ΩøÁî® ssh ÊñπÂºèÔºå ‰∏çÁÑ∂ÊàëËØ¥‰∫ÜËøô‰πàÂçäÂ§©ÔºåÈÉΩÊòØÁôΩÊâØ„ÄÇ ÊñáÁ´†ÂÜÖÂÆπÊúâÁëïÁñµÔºåËØ∑Áªô‰∫àÊåáÊ≠£ÊâπËØÑ]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java Âà§Êñ≠Â≠óÁ¨¶‰∏≤ÊòØÂê¶ÊòØÊï∞Â≠óÁöÑÊñπÊ≥ï]]></title>
    <url>%2F2019%2F04%2F16%2FJava-%E5%88%A4%E6%96%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E6%98%AF%E6%95%B0%E5%AD%97%E7%9A%84%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[‰ΩøÁî® JavaËá™Â∏¶ÁöÑÂáΩÊï∞ 12345678public static boolean isNumeric (String str) &#123; for (int i = str.length(); --i &gt;=0) &#123; if (!Character.isDigit(str.charAt(i))) &#123; return false; &#125; &#125; return true;&#125; ‰ΩøÁî®Ê≠£ÂàôË°®ËææÂºè ÊñπÊ≥ï‰∏Ä: 1234public static boolean isNumeric(String str) &#123; Pattern pattern = Pattern.compile(&quot;^[-\\+]?[\\d]*$&quot;); return pattern.matcher(str).matches();&#125; ÊñπÊ≥ï‰∫å: 123456public static boolean isNumeric(String str) &#123; if (str != null &amp;&amp; !&quot;&quot;.equals(str.trim())) &#123; return s.matches(&quot;^[0-9]*$&quot;); &#125; return false;&#125; ÊñπÊ≥ï‰∏â: 1234 public static boolean isNumeric (String str) &#123; Pattern pattern = Pattern.compile(&quot;[0-9]*&quot;); return pattern.matcher(str).matcher();&#125; ‰ΩøÁî® ASCII Á†Å 123456789public static boolean isNumeric (String str) &#123; for (int i = str.length(); --i&gt;=0;) &#123; int chr = str.charAt(i); if (chr &lt; 48 || chr &gt; 57) &#123; return false; &#125; &#125; return true;&#125; Âà§Êñ≠ÊòØ‰∏çÊòØÊµÆÁÇπÂûãÊï∞ÊçÆ 1234public static boolean isDouble(String str) &#123; Pattern pattern = Pattern.compile(&quot;^[-\\+]?[.\\d]*$&quot;); return pattern.matcher(str).matches();&#125;]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android ‰∏≠ËÆæÁΩÆÂÖ®Â±èÁöÑÊñπÊ≥ï]]></title>
    <url>%2F2019%2F04%2F16%2FAndroid-%E4%B8%AD%E8%AE%BE%E7%BD%AE%E5%85%A8%E5%B1%8F%E7%9A%84%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[Âú®ÂºÄÂèë‰∏≠,Êàë‰ª¨ÁªèÂ∏∏ÈúÄË¶ÅÊääÊàë‰ª¨ÁöÑÂ∫îÁî®ËÆæÁΩÆ‰∏∫ÂÖ®Â±è,ËøôÈáåÊúâ‰∏§ÁßçÊñπÂºè: ‰∏ÄÊòØÂú®‰ª£Á†Å‰∏≠ËÆæÁΩÆ; ‰∫åÊòØÂú®ÈÖçÁΩÆÊñá‰ª∂‰∏≠ËÆæÁΩÆ ‰∏Ä. Âú®‰ª£Á†Å‰∏≠ËÆæÁΩÆ1234567891011public class BaseActivity extends Activity &#123; @Override public void onCreate(Bundle savedInstanceState) &#123; super.onCreate(saveInstanceState); // Êó†title requestWindowFeature(Window.FEATURE_NO_TITLE); // ÂÖ®Â±è getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); setContentView(R.layout.activity_main); &#125; &#125; Âº∫Ë∞É‰∏ÄÁÇπ: ËÆæÁΩÆÂÖ®Â±èÁöÑ‰∏§ÊÆµ‰ª£Á†Å,ÂøÖÈ°ªÂú® setContentView() ‰πãÂâçË∞ÉÁî®,‰∏çÁÑ∂‰ºöÊä•Èîô ‰∫å. Âú®ÈÖçÁΩÆÊñá‰ª∂‰∏≠‰øÆÊîπ1234567891011121314151617&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; package=&quot;com.android.test&quot; android:versionCode=&quot;1&quot; ndroid:versionName=&quot;1.0&quot;&gt; &lt;application android:icon=&quot;@drawable/icon&quot; android:lable=&quot;@string/app_name&gt; &lt;activity android:name=&quot;.BaseActivity&quot; android:theme=&quot;@android:style/Theme.NotitleBar.Fullscreen&quot; android:lable=&quot;@string/app_name&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot;/&gt; &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot;/&gt; &lt;/intent-filter&gt; &lt;/application&gt;&lt;/manifest&gt; ‰ΩøÁî®Á¨¨‰∏ÄÁßçÊñπÊ≥ï,‰ºöÂú®Â∫îÁî®ËøêË°åÂêé,ÁúãÂà∞‰∏Ä‰∏™Áü≠ÊöÇÁöÑÁä∂ÊÄÅÊù•, ÁÑ∂ÂêéÊâçÂÖ®Â±è, ËÄåÁ¨¨‰∫åÁßçÊñπÊ≥ïÊòØ‰∏ç‰ºöÊúâËøôÁßçÊÉÖÂÜµÁöÑ,Â§ßÂÆ∂Ê†πÊçÆÈúÄË¶ÅËá™Ë°åÈÄâÊã©.]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android Ëé∑Âèñ IP Âú∞ÂùÄ]]></title>
    <url>%2F2019%2F04%2F16%2FAndroid-%E8%8E%B7%E5%8F%96-IP-%E5%9C%B0%E5%9D%80%2F</url>
    <content type="text"><![CDATA[ÂºÄÂèë‰∏≠ÁªèÂ∏∏‰ºöÈúÄË¶ÅÂà§Êñ≠ÂΩìÂâçÊòØÂê¶ËøûÊé•ÁΩëÁªú, WiFi Êàñ ÁßªÂä®Êï∞ÊçÆËøûÊé•Âà§Êñ≠ÁöÑÈúÄÊ±Ç, Á¨¨‰∏ÄÁßçÊñπÊ≥ï: 123WifiManager wifiManager = (WifiManager) getSystemService(WIFI_SERVICE); WifiInfo wifiInfo = wifiManager.getConnectionInfo(); int ipAddress = wifiInfo.getIpAddress(); ÈÄöËøáËøôÁßçÊñπÂºèËé∑ÂèñÂà∞ÁöÑ IP Âú∞ÂùÄ‰∏∫‰∏Ä‰∏≤Êï∞Â≠ó,Êàë‰ª¨Âπ∂‰∏çËÉΩÁúãÊáÇ,Âõ†Ê≠§Êàë‰ª¨ÈúÄË¶ÅÈÄöËøá‰∏ãÈù¢ÁöÑÊñπÊ≥ïËøõË°åËΩ¨Êç¢: 1String ip = (ipAddress &amp; 0xff) + &quot;.&quot; + (ipAddress&gt;&gt;8 &amp; 0xff) + &quot;.&quot; + (ipAddress&gt;&gt;16 &amp; 0xff) + &quot;.&quot; + (ipAddress &gt;&gt; 24 &amp; 0xff); ËøôÊ†∑ËΩ¨Êç¢‰πãÂêé,Êàë‰ª¨Ëé∑ÂèñÂà∞ÁöÑ IP Âú∞ÂùÄÂ∞±ÊòØÊàë‰ª¨Âπ≥Êó∂ËÆ§ËØÜÁöÑ, ÊØîÂ¶Ç: 192.168.1.108 ËøôÁßçÊñπÊ≥ïÂú®È£ûË°åÊ®°Âºè‰∏ãËé∑ÂèñÂà∞ÁöÑ IP Âú∞ÂùÄ‰∏∫ 0.0.0.0 Á¨¨‰∫åÁßçÊñπÊ≥ï: 12345678910111213141516 public String getLocalIpAddress() &#123; try &#123; for (Enumeration&lt;NetworkInterface&gt; en = NetworkInterface.getNetworkInterfaces(); en.hasMoreElements();) &#123; NetworkInterface intf = en.nextElement(); for (Enumeration&lt;InetAddress&gt; enumIpAddr = intf.getInetAddresses(); enumIpAddr.hasMoreElements();) &#123; InetAddress inetAddress = enumIpAddr.nextElement(); if (!inetAddress.isLoopbackAddress()) &#123; return inetAddress.getHostAddress().toString(); &#125; &#125; &#125; &#125; catch (SocketException ex) &#123; Log.e(LOG_TAG, ex.toString()); &#125; return null; &#125; Á¨¨‰∫åÁßçÊñπÂºèÊòØÊØîËæÉÈÄöÁî®ÁöÑ,Âú®WiFiÂíå3G/4G Áä∂ÊÄÅ‰∏ã,ÈÉΩÂèØ‰ª•Ëé∑ÂèñÂà∞Ê≠£Á°ÆÁöÑÂú∞ÂùÄ.ÊØîÂ¶Ç: fe80::8e3a:e3ff:fe45:a018 ËøôÁßçÊñπÊ≥ïÂú®ÊâãÊú∫Â§Ñ‰∫éÈ£ûË°åÁä∂ÊÄÅ‰∏ãÊó∂, Ëé∑ÂèñÂà∞ÁöÑ IP Âú∞ÂùÄ‰∏∫ null]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰∫ã‰ª∂ÂàÜÂèë]]></title>
    <url>%2F2019%2F04%2F16%2F%E4%BA%8B%E4%BB%B6%E5%88%86%E5%8F%91%2F</url>
    <content type="text"><![CDATA[‰∫ã‰ª∂ÂàÜÂèë‰∫ã‰ª∂ÂàÜÂèëÁöÑ‰∏â‰∏™ÊñπÊ≥ï dispatchTouchEvent(MotionEvent event) Âà§Êñ≠ÂΩìÂâç View ÊòØÂê¶Ë¶ÅÊ∂àË¥πÊ≠§‰∫ã‰ª∂ÔºåÊ∂àË¥πÔºåÂàô‰∏çÂÜçÂêë‰∏ã‰º†ÈÄíÔºåÂèç‰πã‰º†ÈÄíÔºå‰ª•Ê≠§Êù•ÂàÜÂèë‰∫ã‰ª∂Ôºõ onInterceptTouchEvent(MotionEvent event) ÈÄöËøá dispatchTouchEvent Ë∞ÉÁî®Ôºå ËøîÂõûÂÄºÁî®Êù•Âà§Êñ≠ÂΩìÂâç View ÊòØÂê¶Ë¶ÅÊ∂àË¥π‰∫ã‰ª∂Ôºõ onTouchEvent(MotionEvent event) ÂΩì View ÂÜ≥ÂÆöÊ∂àË¥π‰∫ã‰ª∂ÔºåÂàôÂ∞ÜËøõË°åËØ•ÊñπÊ≥ïÁöÑË∞ÉÁî®Ôºå‰æùÊçÆÂÖ∑‰ΩìÁöÑ‰∫ã‰ª∂ÔºåÂèäÂÖ∑‰Ωì‰∏öÂä°ÔºåÂÆûÁé∞‰∏çÂêåÁöÑ‰∫ã‰ª∂„ÄÇ ÂÖ≥‰∫é‰∫ã‰ª∂ÂàÜÂèëÁöÑ‰∏Ä‰∫õÁªìËÆ∫Ôºö Âêå‰∏Ä‰∏™‰∫ã‰ª∂Â∫èÂàóÊòØÊåá‰ªéÊâãÊåáÊé•Ëß¶Â±èÂπïÁöÑÈÇ£‰∏ÄÂàªËµ∑ÔºåÂà∞ÊâãÊåáÁ¶ªÂºÄÂ±èÂπïÁöÑÈÇ£‰∏ÄÂàªÁªìÊùüÔºåÂú®Ëøô‰∏™ËøáÁ®ã‰∏≠ÊâÄ‰∫ßÁîüÁöÑ‰∏ÄÁ≥ªÂàó‰∫ã‰ª∂ÔºåËøô‰∏™‰∫ã‰ª∂Á≥ªÂàó‰ª• down ‰∫ã‰ª∂ÂºÄÂßãÔºå ‰∏≠Èó¥Âê´ÊúâËã•Âπ≤‰∏™ move ‰∫ã‰ª∂Ôºå ÊúÄÁªà‰ª• up ‰∫ã‰ª∂ÁªìÊùüÔºõ Ê≠£Â∏∏ÊÉÖÂÜµ‰∏ãÔºå‰∏Ä‰∏™‰∫ã‰ª∂Â∫èÂàóÂè™ËÉΩË¢´‰∏Ä‰∏™ View Êã¶Êà™‰∏îÊ∂àËÄó„ÄÇËøô‰∏ÄÂ•óÂì¶ÁöÑÂéüÂõ†ÂèØ‰ª•ÂèÇËÄÉ 3Ôºå Âõ†‰∏∫‰∏ÄÊó¶‰∏Ä‰∏™ÂÖÉÁ¥†Êã¶Êà™‰∫ÜÊüê‰∏™‰∫ã‰ª∂ÔºåÈÇ£‰πàÂêå‰∏Ä‰∏™‰∫ã‰ª∂Â∫èÂàóÂÜÖÁöÑÊâÄÊúâ‰∫ã‰ª∂ÈÉΩ‰ºöÁõ¥Êé•‰∫§ÁªôÂÆÉÂ§ÑÁêÜÔºåÂõ†Ê≠§Âêå‰∏Ä‰∏™‰∫ã‰ª∂Â∫èÂàó‰∏≠ÁöÑ‰∫ã‰ª∂‰∏çËÉΩÂàÜÂà´Áî±‰∏§‰∏™ View ÂêåÊó∂Â§ÑÁêÜÔºå‰ΩÜÊòØÈÄöËøáÁâπÊÆäÊâãÊÆµÂèØ‰ª•ÂÅöÂà∞ÔºåÊØîÂ¶Ç‰∏Ä‰∏™ View Â∞ÜÊú¨ËØ•Ëá™Â∑±Â§ÑÁêÜÁöÑ‰∫ã‰ª∂ÔºåÈÄöËøá onTouchEventÂº∫Ë°å‰º†ÈÄíÁªôÂÖ∂‰ªñ View Â§ÑÁêÜÔºõ Êüê‰∏™ View ‰∏ÄÊó¶ÂÜ≥ÂÆöÊã¶Êà™ÔºåÈÇ£‰πàËøô‰∏Ä‰∏™‰∫ã‰ª∂Â∫èÂàóÈÉΩÂè™ËÉΩÁî±ÂÆÉÊù•Â§ÑÁêÜÔºàÂ¶ÇÊûúËÉΩ‰º†ÈÄíÂà∞‰ªñÁöÑËØùÔºâÔºåÂπ∂‰∏îÂÆÉÁöÑ onInterceptTouchEvent ‰∏ç‰ºöÂÜçË¢´Ë∞ÉÁî®„ÄÇ Êüê‰∏™ View ‰∏ÄÊó¶ÂºÄÂßãÂ§ÑÁêÜ‰∫ã‰ª∂ÔºåÂ¶ÇÊûúÂÆÉ‰∏çÊ∂àËÄó ACTION_DOWN ‰∫ã‰ª∂ÔºàonTouchEvent ËøîÂõû falseÔºâÔºå ÈÇ£‰πàÂêå‰∏Ä‰∫ã‰ª∂Â∫èÂàó‰∏≠ÁöÑÂÖ∂‰ªñ‰∫ã‰ª∂ÈÉΩ‰∏ç‰ºöÂÜç‰∫§ÁªôÂÆÉÊù•Â§ÑÁêÜÔºåÂπ∂‰∏î‰∫ã‰ª∂Â∞Ü‰ºöÈáçÊñ∞‰∫§Áî±ÂÆÉÁöÑÁà∂ÂÖÉÁ¥†ÂéªÂ§ÑÁêÜÔºåÂç≥Áà∂ÂÖÉÁ¥†ÁöÑ onTouchEvent ‰ºöË¢´Ë∞ÉÁî®ÔºåÊÑèÊÄùÂ∞±ÊòØ‰∫ã‰ª∂‰∏ÄÊó¶‰∫§Áî±‰∏Ä‰∏™ View Â§ÑÁêÜÔºåÈÇ£‰πàÂÆÉÂ∞±ÂøÖÈ°ªÊ∂àËÄóÊéâÔºåÂê¶ÂàôÂêå‰∏Ä‰∫ã‰ª∂Â∫èÂàó‰∏≠ÁöÑÂâ©‰∏ãÁöÑ‰∫ã‰ª∂Â∞±‰∏çÂú®‰∫§Áªô‰ªñÊù•Â§ÑÁêÜ‰∫Ü„ÄÇ Â¶ÇÊûú View ‰∏çÊ∂àËÄóÈô§ ACTION_DOWN ‰ª•Â§ñÁöÑÂÖ∂‰ªñ‰∫ã‰ª∂Ôºå ÈÇ£‰πàËøô‰∏™ÁÇπÂáª‰∫ã‰ª∂‰ºöÊ∂àÂ§±ÔºåÊ≠§Êó∂Áà∂ÂÖÉÁ¥†ÁöÑ onTouchEvent Âπ∂‰∏ç‰ºöË¢´Ë∞ÉÁî®ÔºåÂπ∂‰∏îÂΩìÂâç View ÂèØ‰ª•ÊåÅÁª≠ÂèóÂà∞ÂêéÁª≠ÁöÑ‰∫ã‰ª∂ÔºåÊúÄÁªàËøô‰∫õÊ∂àÂ§±ÁöÑÁÇπÂáª‰∫ã‰ª∂‰ºö‰º†ÈÄíÁªô Activity Â§ÑÁêÜ„ÄÇ ViewGroup ÈªòËÆ§‰∏çÊã¶Êà™‰ªª‰Ωï‰∫ã‰ª∂ÔºåAndroid Ê∫êÁ†Å‰∏≠ ViewGroup ÁöÑ onInterceptTouchEvent ÊñπÊ≥ïÈªòËÆ§ËøîÂõû false„ÄÇ View Ê≤°Êúâ onInterceptTouchEvent ÊñπÊ≥ïÔºå‰∏ÄÊó¶ÊúâÁÇπÂáª‰∫ã‰ª∂‰º†ÈÄíÁªô‰ªñÔºåÈÇ£‰πà‰ªñÁöÑ onTouchEvent ÊñπÊ≥ïÂ∞±‰ºöË¢´Ë∞ÉÁî®„ÄÇ View ÁöÑ onTouchEvent ÊñπÊ≥ïÈªòËÆ§‰ºöÊ∂àËÄóÊéâ‰∫ã‰ª∂ÔºàËøîÂõû trueÔºâÔºåÈô§Èùû‰ªñÊòØ‰∏çÂèØÁÇπÂáªÁöÑÔºàclickable Âíå longClickable ÂêåÊó∂‰∏∫ falseÔºâ„ÄÇView ÁöÑ longClickable Â±ûÊÄßÈªòËÆ§ÈÉΩÊòØ falseÔºåclickable Â±ûÊÄßË¶ÅÂàÜÊÉÖÂÜµÔºåÊØîÂ¶Ç Button ÁöÑ clickable Â±ûÊÄßÈªòËÆ§ÊòØ trueÔºåËÄå TextView ÁöÑ clickable ÈªòËÆ§Êú™ false„ÄÇ View ÁöÑ enable Â±ûÊÄß‰∏çÂΩ±Âìç onTouchEvent ÁöÑÈªòËÆ§ËøîÂõûÂÄºÔºåÂì™ÊÄï‰∏Ä‰∏™ View ÊòØ disable Áä∂ÊÄÅÔºåÂè™Ë¶Å‰ªñÁöÑ clickable ÊàñËÄÖ longClickable Êúâ‰∏Ä‰∏™‰∏∫ trueÔºå ÈÇ£‰πà‰ªñÁöÑ onTouchEvent Â∞±ËøîÂõûtrue„ÄÇ onClick ‰ºöÂèëÁîüÁöÑÂâçÊèêÊòØ View ÊòØÂèØÁÇπÂáªÁöÑÔºåÂπ∂‰∏îÂÆÉÊî∂Âà∞‰∫Ü down Âíå up ‰∫ã‰ª∂„ÄÇ ‰∫ã‰ª∂‰º†ÈÄíËøáÁ®ãÊòØÊúâÂ§ñÂêëÂÜÖÁöÑÔºåÂç≥‰∫ã‰ª∂ÊÄªÊòØÂÖà‰º†ÈÄíÁªôÁà∂ÂÖÉÁ¥†ÔºåÁÑ∂ÂêéÂú®Áî±Áà∂ÂÖÉÁ¥†ÂàÜÂèëÁªôÂ≠ê ViewÔºåÈÄöËøá requestDisallowInterceptTouchEvent ÊñπÊ≥ïÂèØ‰ª•Âú®Â≠êÂÖÉÁ¥†‰∏≠Âπ≤È¢ÑÁà∂ÂÖÉÁ¥†ÁöÑ‰∫ã‰ª∂ÂàÜÂèëËøáÁ®ãÔºå‰ΩÜÊòØ ACTION_DOWN ‰∫ã‰ª∂Èô§Â§ñÔºàËß£ÂÜ≥ÊªëÂä®ÂÜ≤Á™ÅÔºåÂÜÖÈÉ®Êã¶Êà™Ê≥ïÔºâ„ÄÇ ‰∫ã‰ª∂ÁöÑ‰º†ÈÄíËøáÁ®ãÔºöActivity -&gt; Window(PhoneWindow) -&gt; View -&gt; dispatchTouchEvent -&gt; onInterceptTouchEvent -&gt; onTouchEvent„ÄÇ ÂΩì‰∏Ä‰∏™ View ÈúÄË¶ÅÂ§ÑÁêÜ‰∫ã‰ª∂Êó∂ÔºåÂ¶ÇÊûúÂÆÉËÆæÁΩÆ‰∫Ü onTouchListenerÔºåÈÇ£‰πà onTouchListener ‰∏≠ÁöÑ onTouch ÊñπÊ≥ï‰ºöË¢´ÂõûË∞É„ÄÇËøôÊó∂‰∫ã‰ª∂Â¶Ç‰ΩïÂ§ÑÁêÜË¶ÅÁúã onTouch ÁöÑËøîÂõûÂÄºÔºåËøîÂõû falseÔºåÂàôÂΩìÂâç View ÁöÑ onTouchEvent Ë¢´Ë∞ÉÁî®ÔºåtrueÔºå Âàô‰∏çË∞ÉÁî®„ÄÇView ÁöÑ onTouchListener ÊñπÊ≥ï‰ºòÂÖàÁ∫ßÈ´ò‰∫é onTouchEventÔºõonClickListenerÔºàÈúÄË¶ÅÂÆåÊàêÊúâ up Êìç‰ΩúÔºâ ÊñπÊ≥ïÂú® onTouchEvent ‰∏≠Ë¢´Ë∞ÉÁî®ÔºåÂõ†Ê≠§ÔºåonClickListener Â§Ñ‰∫é‰∫ã‰ª∂‰º†ÈÄíÁöÑÂ∞æÁ´Ø„ÄÇ]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android Âú®‰∏Ä‰∏™Â∫îÁî®‰∏≠ÂêØÂä®Âè¶Â§ñ‰∏Ä‰∏™Â∫îÁî®]]></title>
    <url>%2F2019%2F04%2F16%2FAndroid-%E5%9C%A8%E4%B8%80%E4%B8%AA%E5%BA%94%E7%94%A8%E4%B8%AD%E5%90%AF%E5%8A%A8%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E5%BA%94%E7%94%A8%2F</url>
    <content type="text"><![CDATA[Android Âú®‰∏Ä‰∏™Â∫îÁî®‰∏≠ÂêØÂä®Âè¶Â§ñ‰∏Ä‰∏™Â∫îÁî®Android ‰∏≠,‰ªéÂΩìÂâç APP ÂêØÂä®Âè¶Â§ñ‰∏Ä‰∏™ APP ÁöÑÈúÄÊ±Ç,‰∏çÊòØÂæàÂ∏∏ËßÅ, ‰ΩÜÁ°ÆÂÆûÂ≠òÂú®ÁùÄ,ÊØîÂ¶ÇËØ¥Âú®ÊüêÂÆùËøòÊ≤°ÊúâÁé∞Âú®Ëøô‰πàÂº∫Â§ßÊó∂,ÊîØ‰ªòÈúÄË¶ÅÂêØÂä®‰ªñ‰ª¨ÁöÑ APP. ÂÜçÊØîÂ¶ÇËØ¥,ÊüêÁ±≥ÁöÑÈí±ÂåÖÁ≥ªÁªü,ÈúÄË¶ÅÂíå‰ªñ‰ª¨ÁöÑÈáëËûç APP Âú®Êüê‰∫õ‰∏öÂä°‰∏äÊòØÁõ∏‰∫í‰æùËµñÁöÑ,ÈúÄË¶ÅÁõ∏‰∫íÂêØÂä®. Áªº‰∏äÊâÄËø∞, ‰ªé‰∏Ä‰∏™ APP ÂéªÂêØÂä®Âè¶Â§ñ‰∏Ä‰∏™ APP ÁöÑÈúÄÊ±ÇËøòÊòØÊúâÂÆÉÂ≠òÂú®ÁöÑ‰ª∑ÂÄº.Âõ†Ê≠§,‰∏Ä‰∏ãÊòØÊàëÂú®Â∑•‰ΩúÂíåÂ≠¶‰π†‰∏≠ÊÄªÁªìÁöÑÂ¶Ç‰ΩïÈÄöËøá‰∏Ä‰∏™ APP ÂéªÂêØÂä®Âè¶Â§ñ‰∏Ä‰∏™ APP ÁöÑÊñπÂºè. 1. ÈÄöËøá APP ÂêØÂä®Âè¶‰∏Ä‰∏™ APP1234String packageName = &quot;com.android.calendar&quot;;Intent intent = getPackageManager().getLaunchIntentForPackage(packageName);intent.putExtra(&quot;type&quot;, true);startActivity(intent); ‰∏äÈù¢ÁöÑ‰ª£Á†Å,Â∞±ÂèØ‰ª•ÂÆåÊàê‰ªé‰∏Ä‰∏™ APP ÂêØÂä®Âè¶‰∏Ä‰∏™ APP ÁöÑ‰∏öÂä°ÈúÄÊ±Ç, ËøôÈáåÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØ,Êàë‰ª¨ÈúÄË¶ÅÊ£ÄÊµã‰∏Ä‰∏ãË¶ÅÂêØÂä®ÁöÑ APP ÊòØÂê¶Â∑≤ÁªèÂÆâË£Ö,Â¶ÇÊûúÂ∫îÁî®Êú™ÂÆâË£Ö, Âàô‰ºö NullPointException. ÈÄöËøáËøôÁßçÊñπÂºè, Android ËôöÊãüÊú∫‰ºöËá™Â∑±Âú®ÁõÆÊ†á APP ‰∏ãÂØªÊâæÊ†áÁ≠æ‰∏∫ android.intent.action.MAIN ÁöÑ Activity ÂêØÂä®. ËøôÈáå‰ªãÁªç‰∏§ÁßçÊñπÂºè,Ê£ÄÊµãÁõÆÊ†áÂ∫îÁî®ÊòØÂê¶Â∑≤ÁªèÂÆâË£Ö ÊñπÊ≥ï‰∏Ä: 1234Intent intent = getPackageName().getLaunchIntentForPackage(packageName);if (intent == null) &#123; // ËøôÈáåÂà§Êñ≠ Intent ‰∏∫Á©∫, ËØ¥ÊòéÂ∫îÁî®‰∏çÂ≠òÂú® &#125; ÊñπÊ≥ï‰∫å: 1234PackageInfo packageInfo = getPackageManager(0.getPackageInfo(packageName, 0);if (packageInfo == null) &#123; // ËøôÈáåÂ¶ÇÊûú packageInfo ‰∏∫ null, ËØ¥ÊòéÂ∫îÁî®‰∏çÂ≠òÂú®&#125; 2. ÊâìÂºÄÂè¶Â§ñ‰∏Ä‰∏™ APP ÊåáÂÆöÁöÑ Activity1234Intent intent = new Intent();ComponentName componeneName = new ComponeneName(&quot;com.android.calendar&quot;, &quot;com.android.calendar.LaunchActivity&quot;);intent.setComponent(componeneName);startActivity(intent); ÂÄºÂæóÊ≥®ÊÑè: ÈúÄË¶ÅÂ∞ÜÁõÆÊ†á Activity ÁöÑ android:export=‚Äùtrue‚Äù Â±ûÊÄßÂú®ÊâÄÂ±ûÂ∫îÁî®ÁöÑ AndroidMainfest ÈáåËÆæÁΩÆ‰∏∫ true, ÊÑèÊÄùÊòØÂΩìÂâç Activity ÂÖÅËÆ∏Ë¢´Â§ñÈÉ®Â∫îÁî®ËÆøÈóÆ, Âê¶Âàô‰ºöÊä•Èîô 123Caused by: java.lang.SecurityException: Permission Denial: starting Intent &#123; cmp=com.example.fm/.MainFragmentActivity (has extras) &#125; from ProcessRecord&#123;39282a97 11545:com.xing.toolbardemo1/u0a71&#125; (pid=11545, uid=10071) not exported from uid 10067 Âú® 5.0 ‰ª•ÂâçÁöÑËÆæÂ§á‰∏ä,ÈúÄË¶ÅÂú®ÂΩìÂâçÁöÑ AndroidMainfest Èáå‰πüÁîüÂëΩÁõÆÊ†áActivity, Âê¶Âàô‰ºöÊä•Èîô; ‰ΩÜÂú® 5.0 ‰ª•ÂêéÁöÑËÆæÂ§á‰∏ä,Â∞±‰∏ç‰ºöÊä•ÈîôÂì¶ 12 Caused by: android.content.ActivityNotFoundException: Unable to find explicit activity class &#123;com.example.fm/com.example.fm.MainFragmentActivity&#125;; have you declared this activity in your AndroidManifest.xml?]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android Studio Dependencies Library Resolve]]></title>
    <url>%2F2019%2F04%2F16%2FAndroid-Studio-Dependencies-Library-Resolve%2F</url>
    <content type="text"><![CDATA[Âú®‰ΩøÁî® Android Studio ÂºÄÂèëÊó∂,‰ΩøÁî® Gradle ËÑöÊú¨ÊûÑÂª∫È°πÁõÆ, Âêå Maven ‰∏ÄÊ†∑,ÊâÄÂºïÁî®ÁöÑÂåÖ‰πãÈó¥‰πüÂ≠òÂú®ÁùÄÁõ∏‰∫í‰æùËµñÁöÑÂÖ≥Á≥ª, ÂΩì‰Ω†‰ΩøÁî®Êüê‰∏™ÂåÖ‰πãÂêé,ÂèëÁé∞ÊúâÂåÖÁâàÊú¨ÂÜ≤Á™Å, ÈÇ£‰πàËß£ÂÜ≥ÊñπÊ°àÂ∞±Êù•‰∫Ü. ÂÖàËØ¥ÁÇπ‰∏çÊ≠£ÁªèÁöÑ: ‰Ω†ÂèØ‰ª•Êää‰Ω†Ëá™Â∑±ÂºïÂÖ•ÁöÑÂåÖÂéªÊéâ,‰ΩøÁî®‰æùËµñÂåÖ ÊîæÂºÉÊ≤ªÁñó ÂìàÂìà,Ë®ÄÂΩíÊ≠£‰º†: ÂΩìÊàë‰ª¨ÂºïÂÖ•ÁöÑÂåÖ‰πãÈó¥Â≠òÂú®ÂÜ≤Á™Å(‰∏çÊòØÂêå‰∏Ä‰∏™)ÁöÑÂÖ≥Á≥ªÊó∂, ‰πüÂ∞±ÊòØËØ¥,Êàë‰ª¨ÈúÄË¶Å‰øùÁïô‰∏Ä‰∏™È°πÁõÆ‰æùËµñÂåÖ‰ΩøÁî®,ÈÇ£‰πàÊàë‰ª¨ÈúÄË¶ÅÂú® build.gradle ‰∏≠Â∞ÜÊàë‰ª¨‰∏çÈúÄË¶ÅÁöÑÂåÖÂà†Èô§Êéâ. ‰∏æ‰∏™Ê†óÂ≠ê:ÂΩìÊàë‰ΩøÁî® com.squareup.retrofit2:adapter-rxjava:2.1.0 Êó∂, ÂÆÉÈªòËÆ§‰æùËµñ‰ΩøÁî® RxJava 1.5.0 ÁâàÊú¨. ÂΩìÊàë‰ΩøÁî® io.reactivex.rxjava2:rxjava:2.0.6 Êó∂, Â∞±‰ºöÂºïËµ∑ÂåÖÂÜ≤Á™Å. Ëß£ÂÜ≥ÊñπÊ°à:build.gradle 1234567891011...dependencies &#123; compile fileTree(include: [&apos;*.jar&apos;], dir: &apos;libs&apos;) compile (&apos;com.squareup.retrofit2:adapter-rxjava:2.1.0&apos;)&#123; exclude group: &apos;io.reactivex&apos; &#125; compile &apos;io.reactivex.rxjava2:rxjava:2.0.6&apos; compile &apos;io.reactivex.rxjava2:rxandroid:2.0.1&apos;&#125;]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git command]]></title>
    <url>%2F2019%2F04%2F16%2Fgit-command%2F</url>
    <content type="text"><![CDATA[Git ÂëΩ‰ª§ ‰øÆÊîπËÆ∞ÂΩï ‰øÆÊîπÊó∂Èó¥ Â§áÊ≥® Ê∑ªÂä†Âà†Èô§ËøúÁ®ãÂàÜÊîØ 2018Âπ¥07Êúà26Êó•13:59:22 Âà†Èô§ËøúÁ®ãÂàÜÊîØÂëΩ‰ª§ Êõ¥Êñ∞fork‰ªìÂ∫ì 2018Âπ¥08Êúà10Êó•14:16:08 Ê∑ªÂä†forkÁöÑ‰ªìÂ∫ìÔºå‰ªé‰∏ª‰ªìÂ∫ìÊõ¥Êñ∞‰ª£Á†ÅÁöÑÂëΩ‰ª§ Êï¥ÁêÜÁöÑËøò‰∏çÂ§üÂÆåÂñÑÔºå‰ª•ÂêéÂ∑•‰Ωú‰∏≠ÈÅáÂà∞‰∫Ü‰ºö‰∏çÊñ≠Ë°•ËøõÔºåÂ¶ÇÊúâÂ§ßÁ•ûÔºåÊúâÂèØ‰ª•ÁïôË®ÄÔºåÊàë‰ª¨‰∏ÄËµ∑Êù•ÂÆåÂñÑ„ÄÇÊ¨¢ËøéÂêÑ‰ΩçÁïôË®Ä^_^ Git Êñá‰ª∂ÁöÑ‰∏âÁßçÁä∂ÊÄÅ Â∑≤Êèê‰∫§ÔºöË°®Á§∫ËØ•Êñá‰ª∂Â∑≤ÁªèË¢´ÂÆâÂÖ®Âú∞‰øùÂ≠òÂú®Êú¨Âú∞ÁâàÊú¨Â∫ì‰∏≠ÔºåÊâßË°åËøágit commit„ÄÇ Â∑≤‰øÆÊîπÔºöË°®Á§∫‰øÆÊîπ‰∫ÜÊüê‰∏™Êñá‰ª∂Ôºå‰ΩÜËøòÊ≤°ÊúâÊèê‰∫§‰øùÂ≠ò Â∑≤ÊöÇÂ≠òÔºöË°®Á§∫ÊääÂ∑≤‰øÆÊîπÁöÑÊñá‰ª∂ÊàøÂ≠êÂïä‰∏ãÊ¨°Êèê‰∫§Êó∂Ë¶Å‰øùÂ≠òÁöÑÊ∏ÖÂçï‰∏≠Ôºå‰πüÂ∞±ÊòØÊâßË°å‰∫Ü git add ÂëΩ‰ª§„ÄÇ ËøúÁ®ã‰ªìÂ∫ì‰∏éÊú¨Âú∞‰ª£Á†ÅÁöÑÈÖçÁΩÆÂ∞ÜÊú¨Âú∞Â∑≤ÁªèÊúâÁöÑÈ°πÁõÆ‰∏ä‰º†Âà∞ËøúÁ®ãÁ©∫‰ªìÂ∫ì‰∏≠ 123456cd &lt;project path&gt;git initgit remote add origin &lt;ËøúÁ®ã‰ªìÂ∫ìÂú∞ÂùÄ&gt;git add .git commit -m &apos;Êèê‰∫§Êó•Âøó&apos;git push -u origin master Git Âü∫Êú¨ÈÖçÁΩÆ ÈÖçÁΩÆ‰∏™‰∫∫ÁöÑÁî®Êà∑ÂêçÁß∞ÂíåÁîµÂ≠êÈÇÆ‰ª∂Âú∞ÂùÄÔºåÊØèÊ¨°Êèê‰∫§Êó∂ÔºåÈÉΩ‰ºöÂºïÁî®Ëøô‰∏§Êù°‰ø°ÊÅØÔºå‰ª•Áî®Êù•ËØ¥ÊòéÊòØË∞ÅÊèê‰∫§ÁöÑÊõ¥Êñ∞„ÄÇ ‰ΩøÁî® --global ÈÄâÈ°πÔºåÊõ¥ÊîπÁöÑÊú™Áî®Êà∑‰∏ªÁõÆÂΩï‰∏ãÁöÑÈÖçÁΩÆÔºåÂ¶ÇÊûúÊÉ≥Âú®Êüê‰∏™ÁâπÂÆöÁöÑÈ°πÁõÆ‰∏≠‰ΩøÁî®ÂÖ∂‰ªñÁöÑÂêçÁß∞ÂíåÈÇÆ‰ª∂ÔºåÂè™ÈúÄË¶ÅÂéªÊéâ --global ÈÄâÈ°πÈáçÊñ∞ÈÖçÁΩÆÔºåÊñ∞ÁöÑÈÖçÁΩÆ‰Ωç‰∫éÂΩìÂâçÈ°πÁõÆÁöÑ .git/config Êñá‰ª∂‰∏≠„ÄÇ 12git config --global user.name &apos;&apos;yourname&apos;&apos;git config --global user.email yourname@gmail.com Âü∫Á°ÄÂëΩ‰ª§ git init ÈÄöËøáÊ≠§ÂëΩ‰ª§‰ºöÂú®ÂΩìÂâçÁõÆÂΩïÂàõÂª∫‰∏Ä‰∏™.gitÁöÑÈöêËóèÁõÆÂΩïÔºåËøôÊòØgitÁöÑÁ¨¨‰∏ÄÊ≠•„ÄÇ git status git statusÊòØÊúÄ‰∏∫Â∏∏Áî®ÁöÑÂëΩ‰ª§‰πã‰∏ÄÔºåÁî®‰∫éÊ£ÄÊü•Êú¨Âú∞È°πÁõÆÁöÑÁä∂ÊÄÅ.‰ªîÁªÜÈòÖËØªÁ∫¢Ëâ≤/ÁªøËâ≤ÈÉ®ÂàÜÔºåÂèØ‰ª•Ëé∑ÂæóÁõ∏ÂÖ≥Êñá‰ª∂ÁöÑÊìç‰Ωú‰ø°ÊÅØÔºåÊ†πÊçÆÊèêÁ§∫ÔºåÂà§Êñ≠ÊòØÊâßË°ågit commit ËøòÊòØÊâßË°ågit add Êìç‰Ωú„ÄÇ git add Â∞Ü‰∏Ä‰∏™ÊàñÂ§ö‰∏™Êñá‰ª∂Ê∑ªÂä†Âà∞ git‰ªìÂ∫ì‰∏≠ÔºåÂè™ÊúâÈÄöËøá git add Ê∑ªÂä†ÁöÑÊñá‰ª∂Êâç‰ºöË¢´ÁâàÊú¨ÊéßÂà∂ÁÆ°ÁêÜ„ÄÇ Ê∑ªÂä†Âçï‰∏™Êñá‰ª∂ git add HelloWorld2.java Ê∑ªÂä†Â§ö‰∏™Êñá‰ª∂ git add --a Ê∑ªÂä†ÂΩìÂâçÁõÆÂΩïÊâÄÊúâÊñá‰ª∂ git add . git rm ‚Äìcached Â∞ÜÊñá‰ª∂‰ªégitËøΩË∏™ÂàóË°®‰∏≠ÁßªÈô§ÔºåÂè™ÊòØÈÄªËæëÂà†Èô§Ôºà‰ªéÁâàÊú¨Â∫ì‰∏≠ÁßªÈô§ÔºâÔºåÂπ∂‰∏ç‰ºöÂ∞ÜÊú¨Âú∞Êñá‰ª∂Âà†Èô§ git commit ÊâßË°åËøá git add ÂëΩ‰ª§ÂêéÔºåÈúÄË¶ÅÂ∞ÜÊöÇÂ≠òÁöÑÊñá‰ª∂Êèê‰∫§Âà∞Êú¨Âú∞‰ªìÂ∫ì‰∏≠ÔºåÊ≠§Êó∂ÊòØÁúüÊ≠£ÁöÑÊèê‰∫§ Â∏¶ log ÁöÑÊèê‰∫§Ôºö git commit -m &#39;first commit&#39; ÈÄöËøáÁºñËæëÂô®Êèê‰∫§: git commit Â∏¶log ÁöÑÊèê‰∫§ÊØîËæÉÊñπ‰æøÔºå‰ΩÜÂΩì‰Ω†ÁöÑÊèê‰∫§‰ø°ÊÅØÊúâ‰∏ÄÂÆöÊ†ºÂºèÊàñËÄÖÈúÄË¶ÅÊèê‰∫§ÁöÑÊñáÂ≠óÂÜÖÂÆπËæÉÂ§öÊó∂Ôºå‰ΩøÁî®ÁºñËæëÂô®ÊïàÊûú‰ºöÊõ¥Â•Ω. git log Êü•ÁúãÂéÜÂè≤Êèê‰∫§ËÆ∞ÂΩïÔºå ÂåÖÊã¨Êèê‰∫§‰∫∫„ÄÅÊó∂Èó¥„ÄÅ‰ø°ÊÅØ„ÄÅ‰ø°ÊÅØÊåáÁ∫πÁ≠â. Êü•ÁúãÊèê‰∫§ËÆ∞ÂΩïÔºö git log ÂçïË°åÂ±ïÁ§∫ËÆ∞ÂΩïÔºö git log --pretty=oneline Â±ïÁ§∫ÂÖ®ÈÉ®‰ø°ÊÅØÔºö git log --pretty=fuller git clone &lt;ËøúÁ®ã‰ªìÂ∫ìÂú∞ÂùÄ&gt; ÊãâÂèñËøúÁ®ã‰ªìÂ∫ì‰ª£Á†Å,Ê≠§È°πÁõÆÂπ∂‰∏ç‰∏ÄÂÆöÊòØ‰Ω†ÊâÄÂàõÂª∫ ‰æãÂ¶ÇÔºö git clone git@github.com:bboyfeiyu/AndroidEventBus.git ÊâßË°åÂÆåÊàêÂêéÔºå‰ºöÂú®Êú¨Âú∞ÂΩìÂâçÁõÆÂΩïÂàõÂª∫‰∏Ä‰∏™AndroidEventBusÁöÑÁõÆÂΩïÊù•Â≠òÊîæ‰ªìÂ∫ì‰ª£Á†Å git remote Â∞ÜÊú¨Âú∞Â∑≤ÁªèinitËøáÁöÑÂ∑•Á®ãÈìæÊé•Âà∞ËøúÁ®ãÁöÑÁ©∫‰ªìÂ∫ì‰∏≠Ôºå‰ª•Ê≠§Êù•ÂÆåÊàêËøúÁ®ãÁâàÊú¨Â∫ìÁöÑÂàõÂª∫ ÈìæÊé•ËøúÁ®ãÁâàÊú¨Â∫ìÔºö git remote add origin &lt;ËøúÁ®ãÂú∞ÂùÄ&gt; git branch ÂàÜÊîØÊòØÁî®Êù•ÁÆ°ÁêÜ‰ª£Á†ÅÁâàÊú¨„ÄÅÁ±ªÂûãÁöÑÊúâÊïàÂ∑•ÂÖ∑ÔºåÂèØÊ†πÊçÆ‰∏çÂêåÁöÑÊúçÂä°ÂØπË±°„ÄÅ‰∏çÂêåÁöÑ‰∏äÁ∫øÁâàÊú¨Á≠âÁ≠âÔºåÊù•ÂÅö‰ª£Á†ÅÂàÜÁ¶ªÔºåÁâàÊú¨ÁÆ°ÁêÜÊìç‰Ωú Êü•ÁúãÂàÜÊîØÔºö git branch Êü•ÁúãÂ∏¶Êèê‰∫§‰ø°ÊÅØÁöÑÂàÜÊîØ‰ø°ÊÅØÔºö git branch -v ÂàõÂª∫ÂàÜÊîØÔºö git branch &lt;ÂàÜÊîØÂêçÁß∞&gt; ÂàõÂª∫Âπ∂ÂàáÊç¢ÂàÜÊîØÔºö git branch -b &lt;ÂàÜÊîØÂêçÁß∞&gt; ÂàáÊç¢ÂàÜÊîØÔºö git checkout &lt;ÂàÜÊîØÂêçÁß∞&gt; Êé®ÈÄÅÂàÜÊîØÔºö git push origin &lt;ÂàÜÊîØÂêçÁß∞&gt; Âà†Èô§ÂàÜÊîØÔºö git branch -d &lt;ÂàÜÊîØÂêçÁß∞&gt; Âà†Èô§ËøúÁ®ãÂàÜÊîØÔºö git push origin :&lt;ÂàÜÊîØÂêçÁß∞&gt; ÂêàÂπ∂ÂàÜÊîØÔºö git merge &lt;ÂàÜÊîØÂêçÁß∞&gt; git tag ‰ºöÂàóÂá∫ÊâÄÊúâÁöÑ tag Ê†áÁ≠æ‰ø°ÊÅØ Âú®ÂÆåÊàê‰∫ÜÊâÄÊúâÂäüËÉΩ„ÄÅÂπ∂‰∏îÁªèËøáÊµãËØï‰πãÂêéÔºåÂèØ‰ª•Â∞ÅÊùø‰∏äÁ∫øÁöÑÁâàÊú¨ÔºåÈÄöÂ∏∏‰ºöÊâì‰∏Ä‰∏™Ê†áÁ≠æÔºåËøôÊòØ‰∏Ä‰∏™ÂæàÈáçË¶ÅÁöÑÂäüËÉΩ Âª∫ËÆÆÊØèÊ¨°‰∏äÁ∫øÈÉΩË¶ÅÂÅö‰∏ÄÊ¨°Ôºå‰æø‰∫éÂêéÁª≠ÁöÑÁâàÊú¨Ê£ÄÁ¥¢‰∏éÁª¥Êä§ÔºåÈÄöÂ∏∏‰∏Ä‰∏™Ê†áÁ≠æÂ∞±‰ª£Ë°®‰∫Ü‰∏Ä‰∏™Ê≠£ÂºèÁâàÊú¨„ÄÇ Êü•ÁúãÊú¨Âú∞/ËøúÁ®ã tag Ê†áÁ≠æÔºögit tag Êü•ÁúãÊ®°Á≥ä tag Ê†áÁ≠æÔºö git tag -l &#39;v1.4.2.*&#39; Êü•ÁúãÂ§áÊ≥® tag Ê†áÁ≠æÔºö git tag -ln Êü•ÁúãÊ†áÁ≠æ‰ø°ÊÅØÔºö git show &lt;Ê†áÁ≠æÂêç&gt; ÂàõÂª∫Êú¨Âú∞ tag Ê†áÁ≠æÔºö git tag -a &lt;Ê†áÁ≠æÂêç&gt; -m &quot;&lt;Ê†áÁ≠æÂ§áÊ≥®‰ø°ÊÅØ&gt;&quot; Âà†Èô§Êú¨Âú∞ tag Ê†áÁ≠æÔºö git tag -d &lt;Ê†áÁ≠æÂêç&gt; Êé®ÈÄÅËøúÁ®ã tag Ê†áÁ≠æÔºö git push origin &lt;Ê†áÁ≠æÂêç&gt; Êé®ÈÄÅÂÖ®ÈÉ® tag Ê†áÁ≠æÔºö git push origin -tags Âà†Èô§ËøúÁ®ã tag Ê†áÁ≠æÔºö git push origin :refs/tags/&lt;Ê†áÁ≠æÂêç&gt; Êü•ÁúãËøúÁ®ãÊú∫Áä∂ÊÄÅ git remote Áî®Êù•ÁÆ°ÁêÜÔºå fork ÁöÑÈ°πÁõÆÔºå‰∏é‰∏ªÈ°πÁõÆÁöÑÊõ¥Êñ∞Êìç‰Ωú 12345git remote -vgit remote add upstream git@github.com:XXX/XXX.gitgit fetch upstreamgit merge upstream/mastergit push ‰ΩøÁî®‰∏≠ÁöÑ‰∏Ä‰∫õÊäÄÂ∑ßÂëΩÂêçÂà´ÂêçÂ§çÊùÇÂπ∂Ë∂ÖÈïøÁöÑÂëΩ‰ª§ÔºåÂèØ‰ª•ÈÄöËøáËµ∑Âà´ÂêçÁöÑÊñπÂºèÊñπ‰æøÂú®ÁªàÁ´Ø‰∏≠‰π¶Âçè 123git config --global alias.ci commitgit config --global alias.ck checkoutgit config --global alias.st status ÁÑ∂ÂêéÂ∞±ÂèØ‰ª•ÂæàÊÑâÂø´ÁöÑ‰ΩøÁî®gitÂëΩ‰ª§‰∫Ü„ÄÇ1git st]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂºÄÂèë‰∏Ä‰∏™Android IoT App]]></title>
    <url>%2F2019%2F04%2F16%2F%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAAndroid-IoT-App%2F</url>
    <content type="text"><![CDATA[ÊûÑÂª∫ Android IoT AppÊú¨ÊñáÁøªËØëËá™Building IoT APP for Android Things in 3 step ÂâçË®ÄËøôÁØáÊñáÁ´†‰∏ªË¶ÅÊèèËø∞‰∫ÜÔºåÂ¶Ç‰Ωï‰∏∫ Android Things ÊûÑÂª∫ Android IoT App„ÄÇ ‰πüËÆ∏‰Ω†Êó©Â∑≤ÁªèÁü•ÈÅì‰∫ÜÔºåÊúÄËøë Google ÂèëÂ∏É‰∫Ü‰∏Ä‰∏™Êñ∞ÁöÑ IoT Êìç‰ΩúÁ≥ªÁªü‚Äì Android Things„ÄÇAndroid Things Á≥ªÁªüÔºåÊòØÁî± Android Á≥ªÁªüË°çÁîüÂá∫Êù•ÁöÑÔºåÊõ¥ÊúâÊÑèÊÄùÁöÑÊòØÔºåÊàë‰ª¨ÂèØ‰ª•‰ΩøÁî®Êàë‰ª¨ÁöÑ Android Áü•ËØÜÊù•ÂºÄÂèë Android IoT Â∫îÁî®Á®ãÂ∫è„ÄÇÂú®ÂºÄÂßã‰πãÂâçÔºå‰∫ÜËß£ Android Things and how it works ÊòØÂæàÊúâÂøÖË¶ÅÁöÑ„ÄÇ ÂêçËØçÁ¥¢ÂºïAndroid IoT App Ôºö ÂÆâÂçìÁâ©ËÅîÁΩëÂ∫îÁî® Raspberry Pi 3 Ôºö Ê†ëËéìÊ¥æ 3 ÁõÆÊ†áËøôÁØáÊñáÁ´†ÁöÑÁõÆÊ†áÊòØÔºö ‰ΩøÁî® Android Things ÊûÑÂª∫‰∏Ä‰∏™ÁÆÄÂçïÁöÑ RGB Led ÊéßÂà∂Âô® ‰ΩøÁî® Android API ÊûÑÂª∫ Android IoT UI ÂºÄÂèë Êàë‰ª¨‰ºö‰ΩøÁî® Raspberry Pi 3 ‰Ωú‰∏∫ IoT ÂºÄÂèëÊùø,‰Ω†‰πüÂèØ‰ª•‰ΩøÁî®ÂÖ∂‰ªñÁöÑÂºÄÂèëÊùøÂéªÂºÄÂèë Android Things„ÄÇ Ê≠§Android IoTÂ∫îÁî®ÂèØÂ∏ÆÂä©ÊÇ®ÁÜüÊÇâÊñ∞ÁöÑAndroid Things API„ÄÇ Ê≠§Â§ñÔºåËøô‰∏™Áâ©ËÅîÁΩëÂ∫îÁî®Á®ãÂ∫èÂØπ‰∫éÂºÄÂèëAndroid IoT Â∫îÁî® UI ÁöÑÊ¶ÇËø∞ÂæàÊúâÁî®„ÄÇ Ê≠•È™§‰∏ÄÈÄöÂ∏∏ÊÉÖÂÜµ‰∏ãÔºå‰∏Ä‰∏™ IoT Â∑•Á®ãÊúâ‰∏§ÈÉ®ÂàÜÔºå ÁîµÊ∞î/ÁîµÂ≠êÈÉ®ÂàÜÂíåËΩØ‰ª∂ÈÉ®ÂàÜ„ÄÇËÆ©‰∫ãÊÉÖÂèòÂæóÁÆÄÂçïÔºå‰ΩøÊàë‰ª¨ÂèØ‰ª•ÈõÜ‰∏≠Á≤æÂäõÂú®Android IoT App, Ëøô‰∏™ IoT Â∫îÁî®ÊéßÂà∂ÁùÄ‰∏Ä‰∏™ÁÆÄÂçïÁöÑ RGB LED ÔºàÂÖ±Èò≥ÊûÅÔºâÁÅØ„ÄÇRGB Led ÁÅØ‰ΩøÁî®220Œ©ÁîµÈòªÈìæÊé•Âà∞ RaspberryÔºå ÊØè‰∏™È¢úËâ≤‰∏Ä‰∏™ÔºåÂéüÁêÜÂõæÂ¶Ç‰∏ãÔºö ÂÖ±Èò≥ÊûÅ RGB LED ÁÅØÈùûÂ∏∏Â∏∏ËßÅÔºåÂõ†Ê≠§ Raspberry Pi 3 ‰∏∫ÂºïËÑöÈò≥ÊûÅ‰æõÁîµ„ÄÇÊéßÂà∂ LED È¢úËâ≤ÁöÑ RGB ÂºïËÑöËøûÊé•Âà∞ Raspberry ÂºïËÑöÔºö Pin 29 Pin 31 Pin 33 Ëøô‰∫õÂºïËÑöÁ¥¢ÂºïÊòØÈùûÂ∏∏ÈáçË¶ÅÁöÑÔºåÂõ†‰∏∫Êàë‰ª¨‰ºöÂú® Android IoT App ‰∏ä‰ΩøÁî®ÂÆÉ„ÄÇ ‰∏äÁîµÂâçÔºåËØ∑‰ªîÁªÜÊ£ÄÊü• Raspberry ÈìæÊé•ÊòØÂê¶ÊúâÂºÇÂ∏∏„ÄÇ Áé∞Âú®ÔºåÊàë‰ª¨‰ΩøÁî® Android Studio ÂàõÂª∫‰∏Ä‰∏™ IoT Â∫îÁî®ÔºåÁ¨¨‰∏ÄÊ≠•ÔºåÈÖçÁΩÆ Android IoT Â∑•Á®ãÔºå build.gradle : 123dependencies &#123; provided &apos;com.google.android.things:androidthings:0.1-devpreview&apos;&#125; Android Things ‰ΩøÁî® Activity ÔºåÂ∞±ÂÉèÊàë‰ª¨Âú® Android ‰∏≠‰ΩøÁî®‰∏ÄÊ†∑„ÄÇÂõ†Ê≠§ÔºåËÆ©Êàë‰ª¨ÂàõÂª∫‰∏Ä‰∏™ RGBThingsActivity Á±ªÔºåÂπ∂Âú® onCreate ÊñπÊ≥ï‰∏≠Â§ÑÁêÜ Pin ÈÄö‰ø°„ÄÇ Ê≠•È™§‰∫å‰ΩøÁî® GPIO ÂºïËÑö‰∏é RGB LED ‰º†ÈÄí‰ø°ÊÅØ„ÄÇ GPIO ÂºïËÑö‰ΩøÁî®ÂèØÁºñÁ®ãÁöÑÊé•Âè£ÂéªËé∑ÂèñËÆæÂ§áÁöÑÁä∂ÊÄÅÊàñËÄÖËÆæÁΩÆËæìÂá∫ÂÄºÔºàÈ´òÁîµÂπ≥/‰ΩéÁîµÂπ≥ÔºâÔºå‰ΩøÁî® Respberry GPIO Èü≥ÂèäÂì¶ÂïäÔºåÊàë‰ª¨ÂºÄÂêØÊàñÂÖ≥Èó≠‰∏â‰∏™È¢úËâ≤ÁöÑÁªÑ‰ª∂ÔºàÁ∫¢ÁªøËìùÔºâ„ÄÇ Android Things SDK Êèê‰æõ‰∫Ü‰∏Ä‰∏™ PeripheralManagerService ÁöÑÊúçÂä°ÔºåÂéªÊäΩË±° GPIO ÈÄö‰ø°Êé•Âè£„ÄÇÊØèÂΩìÊàë‰ª¨ÊÉ≥ËØªÂÜôÊï∞ÊçÆÊó∂ÈÉΩÂøÖÈ°ª‰ΩøÁî®ÂÆÉ„ÄÇ‰∏ÄÂºÄÂßãÔºå Android IoT App ÂàùÂßãÂåñÊúçÂä°ÔºåÂπ∂ËÆæÁΩÆÂºïËÑöÂÄºÔºö 1234567891011121314try &#123; PeripheralManagerService manager = new PeripheralManagerService(); blueIO = manager.openGpio(&quot;BCM5&quot;); blueIO.setDirection(Gpio.DIRECTION_OUT_INITIALLY_LOW); greenIO = manager.openGpio(&quot;BCM6&quot;); greenIO.setDirection(Gpio.DIRECTION_OUT_INITIALLY_HIGH); redIO = manager.openGpio(&quot;BCM13&quot;); redIO.setDirection(Gpio.DIRECTION_OUT_INITIALLY_LOW); redIO.setValue(false); blueIO.setValue(false); greenIO.setValue(false);&#125; catch (IOException e) &#123; Log.w(TAG, &quot;Unable to access GPIO&quot;, e);&#125; ËøôÊÆµ‰ª£Á†Å‰ªãÁªç‰∫Ü‰∏Ä‰∫õÊñ∞ÁöÑÈáçË¶ÅÁöÑÊñ∞ÊñπÈù¢„ÄÇÈ¶ñÂÖà,Êàë‰ª¨ÂøÖÈ°ªÈÄâÂØπÂºïËÑö„ÄÇÂ¶ÇÊûú‰ΩøÁî®ÁöÑÊòØ Respberry ÔºåÊàë‰ª¨ÈúÄË¶ÅÁü•ÈÅìÊØè‰∏Ä‰∏™ÂºïËÑöÈÉΩÊúâÂØπÂ∫îÁöÑÂ∫èÂè∑„ÄÇÂêåÊ†∑ÁöÑÊñπÂºèÔºåAndroid Things ‰ΩøÁî®Áõ∏ÂêåÁöÑÂØªÂùÄÊ®°ÂûãÔºå‰∏çÁÆ°ÊÄéÊ†∑ÔºåÂºïËÑöÁöÑÂëΩÂêçÈÉΩÊòØÁî®‰∏çÂêåÁöÑÊñπÂºè„ÄÇÈÄöËøá Respberry Pin reference ,‰∏ãÂõæÔºö ÂèØ‰ª•‰∫ÜËß£Âà∞ Respberry Pi 3 ÁöÑÂºïËÑöÂú∞ÂùÄ„ÄÇËøô‰∫õÂú∞ÂùÄÂêçÁß∞Âú®‰∏äÈù¢ÁöÑ‰ª£Á†Å‰∏≠‰ΩøÁî®„ÄÇ ‰æãÂ¶ÇÔºåË¶Å‰ΩøÁî®ÂºïËÑöBCM5ÔºàÊàñÂºïËÑö29ÔºâÔºå‰ª£Á†Å‰∏∫Ôºö 1blueIO = manager.openGpio(&quot;BCM5&quot;); ÂºÄÂßãÔºå Êàë‰ª¨ËÆæÁΩÆÊâÄÊúâÁöÑÂºïËÑö‰∏∫‰ΩéÁîµÂπ≥Áä∂ÊÄÅÔºà‰ΩéÁîµÂπ≥Âç≥‰∏∫ÂÖ≥Èó≠Áä∂ÊÄÅÔºâÔºåÊ≠§Êó∂ Led ÁÅØ‰∏∫ÂÖ≥Èó≠Áä∂ÊÄÅ„ÄÇÊîπÂèòÂºïËÑöÁöÑÁä∂ÊÄÅÂÄºÔºåÁî±‰ΩéÁîµÂπ≥Ë∞ÉÊï¥Âà∞È´òÁîµÂπ≥ÔºåÊàñËÄÖÊúâÈ´òÁîµÂπ≥Ë∞ÉÊï¥‰∏∫‰ΩéÁîµÂπ≥ÔºåÊàë‰ª¨ÂèØ‰ª•ÁúãÂà∞ÁÅØÁöÑÈ¢úËâ≤ÂèòÂåñ„ÄÇ Ê≠•È™§‰∏âAndroid Things Âè¶Â§ñ‰∏Ä‰∏™ÊúâË∂£ÁöÑÂäüËÉΩÊòØÔºå‰∏∫Êàë‰ª¨Êèê‰æõ‰∫Ü UI Interface„ÄÇ Êàë‰ª¨ÂºÄÂèë‰∏Ä‰∏™ UI Interface Áªô Android IoT App ÂíåÂºÄÂèë Android UI ‰∏ÄÊ†∑„ÄÇÂ∞±ÂÉè Android app ‰∏ÄÊ†∑Ôºå Android Things UI ÂêåÊ†∑ÊòØ‰ΩøÁî® xml Ê†ºÂºèÂºÄÂèë„ÄÇ ‰∏ãÈù¢‰æãÂ≠êÔºåÊàë‰ª¨ÂéªÈÖçÁΩÆÊéßÂà∂ RGB Led ÊòæÁ§∫ÁöÑ 3 ‰∏™ÂºÄÂÖ≥Ôºö 12345678910111213141516171819202122232425&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; &lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:orientation=&quot;vertical&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt; &lt;Switch android:text=&quot;Red&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:id=&quot;@+id/switchRed&quot; android:layout_marginTop=&quot;20dp&quot;/&gt; &lt;Switch android:text=&quot;Green&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:id=&quot;@+id/switchGreen&quot; android:layout_marginTop=&quot;20dp&quot;/&gt; &lt;Switch android:text=&quot;Blue&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:id=&quot;@+id/switchBlue&quot; android:layout_marginTop=&quot;20dp&quot;/&gt; &lt;/LinearLayout&gt; Âú® onCreate ÊñπÊ≥ï‰∏≠ÔºåÊàë‰ª¨ËÆæÁΩÆ layout Â∏ÉÂ±ÄÔºö 123456@Overridepublic void onCreate (Bundle savedInstanceState) &#123; super.onCreate(saveInstanceState); setContentView(R.layout.activity_main); ...&#125; Â§ÑÁêÜÁî®Êà∑ÂºÄÂÖ≥Ôºö 1234567891011Switch switchRed = (Switch)findViewById(R.id.switchRed);switch.setOnCheckedChangedListener(new CompoundButton.OnCheckedChangedListener()&#123; @Override public void onCheckedChanged (CompoundButton buttonView, boolean isChecked)&#123; try &#123; redIO.setValue(!isChecked); &#125; catch (IOException e) &#123; Log.w(TAG,&quot;Red GPIO Error&quot;, e); &#125; &#125;&#125;); Êàë‰ª¨ÂøÖÈ°ª‰∏∫ÂÖ∂‰ªñÂºïËÑöÈáçÂ§çÂêå‰∏ÄÊÆµ‰ª£Á†Å„ÄÇÊúÄÁªàÁªìÊûúÂ¶Ç‰∏ãÔºö Âõ† MarkDown Ê®°Âºè‰∏ãÔºå ÁÆÄ‰π¶‰∏çÊîØÊåÅËßÜÈ¢ëÊí≠ÊîæÔºåËØ∑ÁÇπÂáª‰∏Ä‰∏ãÈìæÊé•ËßÇÁúã„ÄÇ ÊúÄÁªàÁªìÊûúÂ±ïÁ§∫‚ÄìÈúÄË¶ÅÁøªÂ¢ô youtube ‰∏äËßÇÁúã ÊúÄÂêéÔºåË¶Å‰ΩøÁî®Êàë‰ª¨ÁöÑÂ∫îÁî®Á®ãÂ∫èÔºåÊàë‰ª¨ÂøÖÈ°ªÂú® Manifest.xml Êñá‰ª∂‰∏≠Êù°‰ª∂Ôºö 1&lt;uses-library android:name=&quot;com.google.android.things&quot;/&gt; Âπ∂‰∏îÂ£∞ÊòéÊàëÁöÑ Activity ÊòØ‰∏Ä‰∏™ IoT ActivityÔºå ÂêØÂä®ËÑöÊú¨‰∏∫Ôºö 1234&lt;intent-filter&gt; &lt;category android:name=&quot;android.intent.category.IOT_LAUNCHER&quot;/&gt; &lt;category android:name=&quot;android.intent.category.DEFAULT‚Äù/&gt;&lt;/intent-filter&gt; ÊÄªÁªìÊñáÁ´†ÊúÄÂêéÔºå‰Ω†Â∑≤ÁªèÁü•ÈÅì‰∫ÜÂ¶Ç‰ΩïÊõ¥Â•ΩÁöÑ‰ΩøÁî® Android Things„ÄÇ ÊúâË∂£ÁöÑÊòØÔºå‰ΩøÁî®‰∏Ä‰∫õÊñ∞ÁöÑ API Android ÂºÄÂèë‰∫∫ÂëòÂèØ‰ª•ÂáÜÂ§á‰∏ã‰∏ÄÊ¨°ÊäÄÊúØÈù©ÂëΩÊàê‰∏∫Áâ©ËÅîÁΩë„ÄÇÊ≠§Â§ñÔºåÂºÄÂèëËøáÁ®ã‰∏é Android Â∫îÁî®Á®ãÂ∫èÁõ∏Âêå„ÄÇ ‰ΩøÁî®ÁÆÄÂçïÁöÑÂá†Ë°å‰ª£Á†ÅÔºå‰∏Ä‰∏™ Android ÂºÄÂèëËÄÖÂ∞±ÂèØ‰ª•ÊûÑÂª∫ Android IoT App.]]></content>
      <tags>
        <tag>Android Things</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Jenkins + gradle + git ÊûÑÂª∫ Android CI ÊûÑÂª∫ÁéØÂ¢É]]></title>
    <url>%2F2019%2F04%2F16%2FJenkins-gradle-git-%E6%9E%84%E5%BB%BA-Android-CI-%E6%9E%84%E5%BB%BA%E7%8E%AF%E5%A2%83%2F</url>
    <content type="text"><![CDATA[ÂâçË®ÄÂú®È°πÁõÆÂºÄÂèë‰∏≠ÔºåÊàë‰ª¨ÈúÄË¶ÅÂ∞ÜÊúÄÊñ∞ÁöÑ‰ª£Á†ÅÊõ¥Êñ∞ÔºåÊèê‰æõÁªôÊµãËØï‰∫∫ÂëòËøõË°åÊµãËØïÔºå‰ª•ÂèäÂèëÂ∏É„ÄÇ ÁõÆÂâç Android Â∑•‰Ωú‰∏≠ÈÉΩÂú®‰ΩøÁî®ÂæàÂº∫Â§ßÁöÑÂºÄÂèë„ÄÅÊûÑÂª∫‰ª•ÂèäÊâìÂåÖÂ∑•ÂÖ∑Ôºå‰æãÂ¶ÇÔºö android-studio„ÄÅGradle„ÄÅGitÁ≠â„ÄÇ ÁÑ∂ÔºåÂú®‰ºÅ‰∏öÁªÑÁªáÂπ∂‰∏çÊòØÂæàÂÆåÂñÑÁöÑÂÖ¨Âè∏ÈáåÔºåÂºÄÂèëÊâìÂåÖÂèëÂ∏ÉÁ≠âÂ∑•‰ΩúÔºåÊó∂Â∏∏‰ºöÁî±ÂºÄÂèë‰∫∫ÂëòËøõË°åÊìç‰ΩúÔºåÈöæÂÖçÂú®‰∏Ä‰∫õÂú∞ÊñπÁñèÂøΩÊéâ„ÄÇ Âõ†Ê≠§ÔºåCI ÊûÑÂª∫ÁöÑÂá∫Áé∞Ôºå‰ΩøÂæóËøô‰∫õÁπÅÁêêÁöÑÂ∑•‰ΩúÂèòÂæóËΩªÊùæËµ∑Êù•„ÄÇ ÂØπ‰∫éÂºÄÂèëÂ∑•Á®ãÂ∏àÔºåÂè™Ë¥üË¥£ÂêëÁâàÊú¨Â∫ìÊèê‰∫§‰ª£Á†ÅÔºå‰∏çÁî®ÂÖ≥ÂøÉÊâìÂåÖÔºåÂèëÂ∏É‰πãÁ±ªÁöÑÊµÅÁ®ã„ÄÇ ÂØπ‰∫é‰∫ßÂìÅÂíåÊµãËØïÔºåÂè™ÈúÄË¶Å‰ªéÂèëÂ∏ÉÈ°µÈù¢‰∏ãËΩΩ APK ÂÆâË£ÖÊñá‰ª∂Ôºå‰∏çÈúÄË¶ÅÊØè‰∏ÄÊ¨°ÈÉΩÂéªÂ∑•Á®ãÂ∏àÂì™ÈáåÁ¥¢ÂèñÊúÄÊñ∞ÁöÑÂÆâË£ÖÊñá‰ª∂„ÄÇ CI ÁöÑÂü∫Êú¨Â∑•‰ΩúÊµÅÁ®ãÂ¶Ç‰∏ãÔºö Êàë‰ª¨ÊØè‰∏ÄÊ¨°Êèê‰∫§‰ª£Á†ÅÔºàÈÄöËøágit/svn‰Ωú‰∏∫ÁâàÊú¨Â∫ìÔºâÂà∞‰∏ªÂπ≤‰∏äÔºåÊ†πÊçÆ CI ÁöÑÂÆöÊó∂‰ªªÂä°ÔºåÊ£ÄÊµãÂà∞ÁâàÊú¨Êõ¥Êñ∞ÔºåÈÄöËøá CI ÔºåÂ∞ÜËøõË°åÊâìÂåÖÂèëÂ∏ÉÁ≠âÊµÅÁ®ãÊìç‰Ωú„ÄÇ ÂáÜÂ§áÂ∑•‰ΩúÊú¨Êñá‰ΩøÁî® Linux Ubuntu Á≥ªÁªü‰∏∫Â§ßÂÆ∂‰ªãÁªçÁéØÂ¢ÉÁöÑÊê≠Âª∫ ÁéØÂ¢ÉÂ∑•ÂÖ∑1. PC Êú∫(mac/linux) 2. Java JDK 3. Android SDK 4. Gradle 5. Git 6. Tomcat 7. Jenkins ÁéØÂ¢ÉÊê≠Âª∫Java ÁéØÂ¢É ÂÆâË£ÖJava JDK, Android SDK, Gradle ÂèØ‰ªéAndroidDevToolsÂ§Ñ‰∏ãËΩΩËé∑Âèñ„ÄÇ git ÂÆâË£Ögit ÂèØÈÄöËøáÁªàÁ´ØËøõË°åÂÆâË£Ö123sudo add-apt-repository ppa:git-core/ppasudo apt-get updatesudo apt-get install git ÂÆâË£ÖÂÆåÊàê‰πãÂêéÈÄöËøágit --version Ê£ÄÊü•ÊòØÂê¶ÊàêÂäü ÂÆâË£ÖÂêé git Â≠òÂÇ®Âú® /usr/bin/git‰∏ã JenkinsÈÄöËøá Jenkins ÂÆòÊñπÁΩëÁ´ô‰∏ãËΩΩÊúÄÊñ∞Jenkins.warÂåÖ ÁéØÂ¢ÉÂèòÈáèÊâìÂºÄ vi /etc/profile Â∞Ü‰∏ãÂàóËØ≠Âè•Ê∑ªÂä†Âú®Êñá‰ª∂ÁöÑÊú´Â∞æÂêéÔºå ÊâßË°å esc-&gt;:wq ÂÖ∂‰∏≠ÁéØÂ¢É‰ΩçÁΩÆÊ†πÊçÆËá™Â∑±ÁöÑÊâÄÂú®‰ΩçÁΩÆËøõË°åÁõ∏Â∫îÁöÑÊõ¥Êîπ ÂêØÂä®ÊøÄÂä®ÁöÑ‰Ω†ÔºåÊòØ‰∏çÊòØÂ∑≤ÁªèË¢´Ëøô‰∫õÁπÅÁêêÁöÑ‰∏úË•øÊêûÁöÑ‰∏çËÄêÁÉ¶‰∫ÜÂë¢Ôºå‰∏ãÈù¢Êàë‰ª¨ÂºÄÂßãÂêØÂä® Jenkins Â∞Ü‰∏ãËΩΩÂ•ΩÁöÑ Jenkins.war ÂåÖÔºå ÊîæÂÖ• Tomcat ÁöÑ webapps ÁõÆÂΩï‰∏ãÔºåËøõÂÖ• bin ÁõÆÂΩïÊâßË°å ./startup.sh ÂêØÂä® Tomcat„ÄÇ ÂêØÂä®ÂêéÔºåÂú®ÊµèËßàÂô®‰∏≠ËæìÂÖ•Ôºö localhost:8080/jenkins Êèí‰ª∂ÂÆâË£ÖÁ≥ªÁªüÁÆ°ÁêÜ-&gt; Êèí‰ª∂ÁÆ°ÁêÜ-&gt;ÂèØÈÄâÊèí‰ª∂Ôºö Âú®ÊêúÁ¥¢Ê°Ü‰∏≠ÊêúÁ¥¢‰ª•‰∏ãÊèí‰ª∂ÔºåÂπ∂ËøõË°åÂÆâË£Ö git plugingitlab plugingrade pluginAndroid Lint PluginBuild Pipeline pluginbuild timeout pluginbuild name pluginchange assembly-version plugincredentials binding plugindescription setter pluginDynamic parameter pluginEmail Extension pluginFindBugs pluginJaCoco pluginUnit attachments pluginProject Description pluginTimestamperWorkspace cleanup plugin ÂÆâË£ÖÂÆåÊàêÂêéÔºåÈáçÂêØ„ÄÇ Á≥ªÁªüËÆæÁΩÆÁ≥ªÁªüÁÆ°ÁêÜ-&gt;Á≥ªÁªüËÆæÁΩÆÔºö ÈÖçÁΩÆAndroid ÁéØÂ¢ÉÔºåÂ∞ÜÂú∞ÂùÄÊåáÂêëÊú¨Êú∫ÁöÑ SDK ÁõÆÂΩï Á≥ªÁªüÁÆ°ÁêÜ-&gt;ÂÖ®Â±ÄÂ∑•ÂÖ∑ÈÖçÁΩÆ ÈÖçÁΩÆ JavaÔºå Git Ôºå Gradle ÁõÆÂΩïÁ≠â JDKÔºö GitÔºö GradleÔºö Âà∞Ê≠§ÔºåÁéØÂ¢ÉÈÖçÁΩÆÔºåÂ∑≤Âü∫Êú¨ÂÆåÊàê„ÄÇ ‰∏ãÈù¢Êàë‰ª¨ÂºÄÂßãËøõË°åÈ°πÁõÆÂ§üÂ∞ÜÊìç‰Ωú È°πÁõÆÊûÑÂª∫ÂàõÂª∫JobÊñ∞Âª∫-&gt;ÊûÑÂª∫‰∏Ä‰∏™Ëá™Áî±È£éÊ†ºÁöÑËΩØ‰ª∂È°πÁõÆ: ÂèÇÊï∞ÂåñÊûÑÂª∫ÈÄöÂ∏∏Êàë‰ª¨Âú®‰ΩøÁî® Android-studio ËøõË°åÊâìÂåÖÊó∂‰ª•ÂèäÁ≠æÂêçÊó∂ÔºåÈÉΩ‰ºöÁî®Âà∞build.gradleÂπ∂Âú®ÂÖ∂‰∏≠ÈÖçÁΩÆÁõ∏ÂÖ≥Â±ûÊÄß„ÄÇÂÜçÊ≠§ÔºåÊàë‰ª¨ÂèØ‰ª•Áî®JenkinsÔºåÈÖçÁΩÆÊàë‰ª¨ÁöÑÈ°πÁõÆÂèÇÊï∞Ôºå‰æãÂ¶ÇÂèëÂ∏ÉÁöÑÁâàÊú¨Âè∑ÔºåÊûÑÂª∫Êó∂Èó¥Ôºå ‰∏ä‰º†Ë∑ØÂæÑÔºåÂèëÂ∏ÉÂú∞ÂùÄÔºåÁ≠æÂêçÊâìÂåÖÁ≠âÁ≠â„ÄÇ Âú®ËøôÈáåÊàë‰ª¨ÂÖàÁúãÁúã build.gradle ‰∏≠ÁöÑÊûÑÂª∫‰ø°ÊÅØ: Âú®È°πÁõÆÁöÑ moudle ‰∏ã build.gradle Êñá‰ª∂1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768def getDate () &#123; def date = new Date() def formattedDate = date.format(&quot;yyyyMMddHHmm&quot;) return formattedDate&#125;def verName = APP_VERSIONdef verCode = 14android &#123; .... signingConfigs &#123; release &#123; keyAlias &apos;&apos; keyPassword &apos;&apos; storeFile file (&apos;&apos;) storePassword &apos;&apos; &#125; &#125; defaultConfig &#123; applicationId &quot;cn.zhuangbudong.example&quot; minSdkVersion 18 targetSdkVersion 25 multiDexEnabled true versionCode verCode versionName verName resValues(&quot;string&quot;, &apos;app_version&apos;, verName) &#125; buildTypes &#123; release &#123; signingConfig signingConfigs.release minifyEnabled false proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos; &#125; lintOptions &#123; abortOnError false &#125; dexOptions &#123; javaMaxHeapSize &apos;2g&apos; &#125;applicationVariants.all &#123; variant -&gt; variant.outputs.each &#123; output -&gt; def newName def timeNow def oldFile = output.outputFile def outDirectory = oldFile.parent if (&quot;true&quot;.equals(IS_JENKINS)) &#123; timeNow = JENKINS_TIME outDirectory = &quot;/media/nexd/work/android/package/release/&quot; newName = &apos;zhuangbudong_example_&apos; + verName + &quot;_&quot; + timeNow + &quot;_&quot; + variant.buildType.name + &quot;.apk&quot; &#125; else &#123; timeNow = getDate() if (variant.buildType.name.equals(&apos;debug&apos;)) &#123; newName = &apos;zhuangbudong_example_&apos; + verName + &quot;_debug.apk&quot; &#125; else &#123; newName = &apos;zhuangbudong_example_&apos; + verName + &quot;_&quot; + timeNow + &quot;_&quot; + variant.buildType.name + &quot;.apk&quot; &#125; &#125; output.outputFile = new File(outDirectory, newName) &#125;&#125; &#125;&#125; gradle.properties: 123APP_VERSION=2.0.2IS_JENKINS=falseJENKINS_TIME=&apos;&apos; Âú®Â∑•Á®ã‰∏≠Ê∑ªÂä†‰ª•‰∏ä‰ª£Á†ÅÔºåÂπ∂Âú®Jenkins‰∏≠‰∏∫Ëøô‰∫õÂèÇÊï∞ËµãÂÄº„ÄÇ ‰∏ãÈù¢‰ªãÁªç Jenkins ÂèÇÊï∞ÈÖçÁΩÆ ÂãæÈÄâÂèÇÊï∞ÂåñÊûÑÂª∫ËøáÁ®ãÔºåÂ¶Ç‰∏ãÂõæÔºö ÊåâÁÖß‰∏ãÂõæÔºåÊ∑ªÂä†Áõ∏ÂÖ≥Á±ªÂûãÁöÑÂèÇÊï∞ÔºåÊ≠§Â§ÑÊ≥®ÊÑèÔºåJenkins ÈÖçÁΩÆÁöÑÂèÇÊï∞ÂêçË¶ÅÂíåÂú®android-studio‰∏≠ÈÖçÁΩÆÁöÑÂèÇÊï∞Âêç‰øùÊåÅ‰∏ÄËá¥ Ê∫êÁ†ÅÁÆ°ÁêÜÊ≠§Â§ÑË¥üË¥£‰ªéÁâàÊú¨Â∫ì‰∏≠ÊãâÂéªÊúÄÊñ∞ÁöÑ‰ª£Á†Å Ê≠§Â§ÑÂ¶ÇÊûúÈúÄË¶ÅÈ™åËØÅÔºåÁÇπÂáª AddÔºå ÈÄâÊã©Ôºö Username with password Âú®ÂØπÂ∫îÁ™óÂè£ËæìÂÖ•Áî®Êà∑ÂêçÂíåÂØÜÁ†Å‰ø°ÊÅØ ÁÇπÂáªÊ∑ªÂä†„ÄÇ ‰ΩøÁî® gitlab ËøõË°åÊ∫êÁ†ÅÂ∫ìÁÆ°ÁêÜ„ÄÇ Ëß¶ÂèëÂô®Ëß¶ÂèëÂô®Ë¥üË¥£ÊãâÂèñ‰ª£Á†ÅÔºåÁºñËØëÔºåÊâìÂåÖÔºåÂèëÂ∏ÉÁ≠âÊìç‰Ωú„ÄÇÈÄöËøáËß¶ÂèëÂô®ÔºåÊâßË°åJenkins„ÄÇ ÊûÑÂª∫ÁéØÂ¢ÉÊ≠§Â§ÑÂè™ÊòØÂú®JenkinsÂú®ÊâìÂåÖÊó∂ÔºåÈÖçÁΩÆ‰ªªÂä°ÂêçÁß∞Âç≥ÂèØ„ÄÇÂ¶Ç‰∏ãÂõæÔºö ÊûÑÂª∫ËøôÈáåÊòØÊúÄÈáçË¶ÅÊª¥ÔºåÈÖçÁΩÆ‰ª•‰∏ãÂëΩ‰ª§ÔºåÊâçËÉΩËøõË°åÊâìÂåÖÁ≠æÂêçÁ≠âÁ≠â„ÄÇ Â¶Ç‰∏ãÈÖçÁΩÆÔºåËøôÈáåÈúÄË¶ÅÊ≥®ÊÑè‰∏ãÔºåÊûÑÂª∫Êñá‰ª∂ÔºåÊ†πÁõÆÂΩï„ÄÇÂú®‰Ω†ÁöÑÁõÆÂΩïÁªìÊûÑÊØîËæÉÂ§çÊùÇÁöÑÊó∂ÂÄôÔºåÂç≥‰Ω†ÁöÑÊ†πÁõÆÂΩïÊ≤°Êúâ build.gradle Êñá‰ª∂Êó∂ÔºåÈúÄË¶ÅÊåáÂÆö‰∏Ä‰∏ã build.gradle ÁõÆÂΩïÁöÑ‰ΩçÁΩÆ„ÄÇ ÂêåÊó∂Ôºå‰πüÊòØÊúÄÈáçË¶ÅÁöÑÔºåÂãæÈÄâ‰∏äpass job parameters as gradle properties Ôºå‰∏çÁÑ∂‰πãÂâçÈÖçÁΩÆÁöÑÂèÇÊï∞Êó†Ê≥ï‰º†ÈÄíÁªôÈ°πÁõÆ‰∏≠ÁöÑ gradle.properties„ÄÇ ÊûÑÂª∫ÂêéÊìç‰ΩúÂΩìÈ°πÁõÆÊûÑÂª∫ÂÆåÊàêÂêéÔºåÊàë‰ª¨ÂèØ‰ª•ÈÄöËøáÈÇÆ‰ª∂ÁöÑÊñπÂºèÂ∞Ü‰∫ßÁîüÁöÑApkÊñá‰ª∂Ôºå‰ª•ÂèäÊµãËØïÊä•ÂëäÔºåÊûÑÂª∫Êó•ÂøóÁ≠â‰ø°ÊÅØÔºåÂèëÈÄÅÂá∫Êù• Â¶Ç‰∏ãÂõæÔºö 12345678910111213&lt;hr/&gt;(Êú¨ÈÇÆ‰ª∂ÊòØÁ®ãÂ∫èËá™Âä®‰∏ãÂèëÁöÑÔºåËØ∑ÂãøÂõûÂ§çÔºÅ)&lt;br/&gt;&lt;hr/&gt;È°πÁõÆÂêçÁß∞Ôºö$&#123;PROJECT_NAME&#125;&lt;br/&gt;&lt;hr/&gt;ÊûÑÂª∫ÁºñÂè∑Ôºö$&#123;BUILD_NUMBER&#125;&lt;br/&gt;&lt;hr/&gt;ÊûÑÂª∫Áä∂ÊÄÅÔºö$&#123;BUILD_STATUS&#125;&lt;br/&gt;&lt;hr/&gt;Ëß¶ÂèëÂéüÂõ†Ôºö$&#123;CAUSE&#125;&lt;br/&gt;&lt;hr/&gt;ÊµãËØïÊä•ÂëäÔºö&lt;a href=&quot;$&#123;PROJECT_URL&#125;ws/$&#123;PROJECT_NAME&#125;app/build/reports/tests/release/index.html&quot;&gt;$&#123;PROJECT_URL&#125;ws/$&#123;PROJECT_NAME&#125;app/build/reports/tests/release/index.html&lt;/a&gt;&lt;br/&gt;&lt;hr/&gt;ÊûÑÂª∫Êó•ÂøóÂú∞ÂùÄÔºö&lt;a href=&quot;$&#123;BUILD_URL&#125;console&quot;&gt;$&#123;BUILD_URL&#125;console/&lt;/a&gt;&lt;br/&gt;&lt;hr/&gt;ÊûÑÂª∫Âú∞ÂùÄÔºö&lt;a href=&quot;$&#123;PROJECT_URL&#125;&quot;&gt;$&#123;PROJECT_URL&#125;&lt;/a&gt;&lt;br/&gt;&lt;hr/&gt;ÊûÑÂª∫Êä•ÂëäÔºö&lt;a href=&quot;$&#123;BUILD_URL&#125;testReport&quot;&gt;$&#123;BUILD_URL&#125;testReport&lt;/a&gt;&lt;br/&gt;&lt;hr/&gt;ÂèòÊõ¥ÈõÜ:$&#123;JELLY_SCRIPT,template=&quot;html&quot;&#125;&lt;br/&gt;&lt;hr/&gt; ÂºÄÂßãÊûÑÂª∫ÂõûÂà∞ Jenkins È¶ñÈ°µÔºåÁÇπÂáªÂàõÂª∫ÁöÑÈ°πÁõÆÔºåÁÇπÂáª build with parameters: ÁÇπÂáªÂºÄÂßãÊûÑÂª∫ÔºåÂêØÂä® Jenkins ÊûÑÂª∫‰ªªÂä°„ÄÇ ÊûÑÂª∫ÊàêÂäüÊó∂ÔºåÊòæÁ§∫‰∏∫ËìùËâ≤Ôºå Â§±Ë¥•‰∏∫Á∫¢Ëâ≤ÔºåÂ¶Ç‰∏ãÂõæÔºö ÊûÑÂª∫ÂêéÁîüÊàêÁöÑ Apk Êñá‰ª∂ÔºåÂ≠òÂú® build.gradle Êñá‰ª∂‰∏≠ÈÖçÁΩÆÁöÑÁõÆÂΩï„ÄÇÂêåÊó∂‰πüÂèØ‰ª•‰ΩøÁî®Ëí≤ÂÖ¨Ëã±Êàñfir.im ËøõË°åÂèëÂ∏ÉÁÆ°ÁêÜ„ÄÇ Ë∞¢Ë∞¢~]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[adb command]]></title>
    <url>%2F2019%2F04%2F16%2Fadb-command%2F</url>
    <content type="text"><![CDATA[Êü•ÁúãPID 1adb shell ps Êü•ÁúãÊó•Âøó 12345ÂÖ®ÈÉ®Êó•Âøóadb logcatÊåâÁÖß PID Á≠õÈÄâÊó•Âøóadb logcat | grep &lt;PID&gt; Êü•ËØ¢ÈìæÊé•ËÆæÂ§á 1adb devices ÈáçÂêØÊú∫Âô® 1adb reboot ÊùÄÊ≠ªËøõÁ®ãÊúçÂä° 1adb kill-server ÈáçÂêØËøõÁ®ãÊúçÂä° 1adb start-server Ëé∑ÂèñÊú∫Âô® Mac Âú∞ÂùÄ 1adb shell cat /sys/class/net/wlan0/address ÂÆâË£Ö APK 12345678ÊôÆÈÄöÂÆâË£Öadb install &lt;file path&gt;‰øùÁïôÊï∞ÊçÆÂíåÁºìÂ≠òÊñá‰ª∂adb install -r &lt;file path&gt;ÂÆâË£ÖÂà∞ SD Âç°‰∏äadb install -s &lt;file path&gt; Âç∏ËΩΩ APK 12345ÊôÆÈÄöÂç∏ËΩΩadb uninstall &lt;package name&gt;‰øùÁïôÊï∞ÊçÆÂíåÁºìÂ≠òÊñá‰ª∂adb uninstall -k &lt;package name&gt; ÂêØÂä®Â∫îÁî® 1adb shell am start -n &lt;package name&gt;/.&lt;activity_class_name&gt; Êü•Áúã CPU Âç†Áî®Áéá 1234567adb shell topÊü•ÁúãÂÜÖÂ≠òÂç†Áî®Ââç 6 ÁöÑ appadb shell top -m 6Âà∑Êñ∞‰∏ÄÊ¨°ÂÜÖÂ≠òadb shell top -n 1 ÊùÄÊ≠ªËøõÁ®ã 1adb shell kill &lt;pid&gt; Â∞Ü System ÂàÜÂå∫ÈáçÊñ∞ÊåÇÂú®‰∏∫ÂèØËØªÂÜôÂàÜÂå∫ 1adb remount ‰ªéÊú¨Âú∞Â§çÂà∂Êñá‰ª∂Âà∞ËÆæÂ§á 1adb push &lt;local&gt; &lt;remote&gt; ‰ªéËÆæÂ§áÂ§çÂà∂Êñá‰ª∂Âà∞Êú¨Âú∞ 1adb pull &lt;remote&gt; &lt;local&gt; Êü•Áúã WiFi ÂØÜÁ†Å 1adb shell cat /data/misc/wifi/*.conf Êü•Áúã bug Êä•Âëä 1adb bugreport Ë∑ë monkey 1adb shell monkey -v -p your.package.name 500 Êà™Âõæ 1adb shell screencap -p /sdcard/screenshot.png ÂΩïÂ±è 1adb shell screenrecord /sdcard/demo.mp4 Êü•ÁúãÂÆâË£ÖÂàóË°® 1adb shell pm list packages]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sitemap]]></title>
    <url>%2Fsitemap%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[schedule]]></title>
    <url>%2Fschedule%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[tags]]></title>
    <url>%2Ftags%2Findex.html</url>
    <content type="text"></content>
  </entry>
</search>
